/*
 * vpc
 * VPC Network 관련 API<br/>https://ncloud.apigw.ntruss.com/vpc/v2
 *
 * OpenAPI spec version: 2020-09-17T02:27:03Z
 *
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.vpc.model;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;

/**
 * GetVpcPeeringInstanceListRequest
 */
public class GetVpcPeeringInstanceListRequest {
	private String regionCode = null;

	private List<String> vpcPeeringInstanceNoList = null;

	private String sourceVpcName = null;

	private String vpcPeeringName = null;

	private String targetVpcName = null;

	private String vpcPeeringInstanceStatusCode = null;

	private Integer pageNo = null;

	private Integer pageSize = null;

	private String sortedBy = null;

	private String sortingOrder = null;

	private String responseFormatType = null;

	public GetVpcPeeringInstanceListRequest regionCode(String regionCode) {
		this.regionCode = regionCode;
		return this;
	}

	 /**
	 * REGION코드
	 * @return regionCode
	**/
	public String getRegionCode() {
		return regionCode;
	}

	public void setRegionCode(String regionCode) {
		this.regionCode = regionCode;
	}

	public GetVpcPeeringInstanceListRequest vpcPeeringInstanceNoList(List<String> vpcPeeringInstanceNoList) {
		this.vpcPeeringInstanceNoList = vpcPeeringInstanceNoList;
		return this;
	}

	public GetVpcPeeringInstanceListRequest addVpcPeeringInstanceNoListItem(String vpcPeeringInstanceNoListItem) {
		if (this.vpcPeeringInstanceNoList == null) {
			this.vpcPeeringInstanceNoList = new ArrayList<String>();
		}
		this.vpcPeeringInstanceNoList.add(vpcPeeringInstanceNoListItem);
		return this;
	}

	 /**
	 * VPCPeering인스턴스번호리스트
	 * @return vpcPeeringInstanceNoList
	**/
	public List<String> getVpcPeeringInstanceNoList() {
		return vpcPeeringInstanceNoList;
	}

	public void setVpcPeeringInstanceNoList(List<String> vpcPeeringInstanceNoList) {
		this.vpcPeeringInstanceNoList = vpcPeeringInstanceNoList;
	}

	public GetVpcPeeringInstanceListRequest sourceVpcName(String sourceVpcName) {
		this.sourceVpcName = sourceVpcName;
		return this;
	}

	 /**
	 * 요청VPC이름
	 * @return sourceVpcName
	**/
	public String getSourceVpcName() {
		return sourceVpcName;
	}

	public void setSourceVpcName(String sourceVpcName) {
		this.sourceVpcName = sourceVpcName;
	}

	public GetVpcPeeringInstanceListRequest vpcPeeringName(String vpcPeeringName) {
		this.vpcPeeringName = vpcPeeringName;
		return this;
	}

	 /**
	 * VPCPeering이름
	 * @return vpcPeeringName
	**/
	public String getVpcPeeringName() {
		return vpcPeeringName;
	}

	public void setVpcPeeringName(String vpcPeeringName) {
		this.vpcPeeringName = vpcPeeringName;
	}

	public GetVpcPeeringInstanceListRequest targetVpcName(String targetVpcName) {
		this.targetVpcName = targetVpcName;
		return this;
	}

	 /**
	 * 수락VPC이름
	 * @return targetVpcName
	**/
	public String getTargetVpcName() {
		return targetVpcName;
	}

	public void setTargetVpcName(String targetVpcName) {
		this.targetVpcName = targetVpcName;
	}

	public GetVpcPeeringInstanceListRequest vpcPeeringInstanceStatusCode(String vpcPeeringInstanceStatusCode) {
		this.vpcPeeringInstanceStatusCode = vpcPeeringInstanceStatusCode;
		return this;
	}

	 /**
	 * VPCPeering인스턴스상태코드
	 * @return vpcPeeringInstanceStatusCode
	**/
	public String getVpcPeeringInstanceStatusCode() {
		return vpcPeeringInstanceStatusCode;
	}

	public void setVpcPeeringInstanceStatusCode(String vpcPeeringInstanceStatusCode) {
		this.vpcPeeringInstanceStatusCode = vpcPeeringInstanceStatusCode;
	}

	public GetVpcPeeringInstanceListRequest pageNo(Integer pageNo) {
		this.pageNo = pageNo;
		return this;
	}

	 /**
	 * 페이지번호
	 * @return pageNo
	**/
	public Integer getPageNo() {
		return pageNo;
	}

	public void setPageNo(Integer pageNo) {
		this.pageNo = pageNo;
	}

	public GetVpcPeeringInstanceListRequest pageSize(Integer pageSize) {
		this.pageSize = pageSize;
		return this;
	}

	 /**
	 * 페이지사이즈
	 * @return pageSize
	**/
	public Integer getPageSize() {
		return pageSize;
	}

	public void setPageSize(Integer pageSize) {
		this.pageSize = pageSize;
	}

	public GetVpcPeeringInstanceListRequest sortedBy(String sortedBy) {
		this.sortedBy = sortedBy;
		return this;
	}

	 /**
	 * 정렬대상
	 * @return sortedBy
	**/
	public String getSortedBy() {
		return sortedBy;
	}

	public void setSortedBy(String sortedBy) {
		this.sortedBy = sortedBy;
	}

	public GetVpcPeeringInstanceListRequest sortingOrder(String sortingOrder) {
		this.sortingOrder = sortingOrder;
		return this;
	}

	 /**
	 * 정렬순서
	 * @return sortingOrder
	**/
	public String getSortingOrder() {
		return sortingOrder;
	}

	public void setSortingOrder(String sortingOrder) {
		this.sortingOrder = sortingOrder;
	}

	public GetVpcPeeringInstanceListRequest responseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
		return this;
	}

	 /**
	 * responseFormatType {json, xml}
	 * @return responseFormatType
	**/
	public String getResponseFormatType() {
		return responseFormatType;
	}

	public void setResponseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		GetVpcPeeringInstanceListRequest getVpcPeeringInstanceListRequest = (GetVpcPeeringInstanceListRequest) o;
		return Objects.equals(this.regionCode, getVpcPeeringInstanceListRequest.regionCode) &&
				Objects.equals(this.vpcPeeringInstanceNoList, getVpcPeeringInstanceListRequest.vpcPeeringInstanceNoList) &&
				Objects.equals(this.sourceVpcName, getVpcPeeringInstanceListRequest.sourceVpcName) &&
				Objects.equals(this.vpcPeeringName, getVpcPeeringInstanceListRequest.vpcPeeringName) &&
				Objects.equals(this.targetVpcName, getVpcPeeringInstanceListRequest.targetVpcName) &&
				Objects.equals(this.vpcPeeringInstanceStatusCode, getVpcPeeringInstanceListRequest.vpcPeeringInstanceStatusCode) &&
				Objects.equals(this.pageNo, getVpcPeeringInstanceListRequest.pageNo) &&
				Objects.equals(this.pageSize, getVpcPeeringInstanceListRequest.pageSize) &&
				Objects.equals(this.sortedBy, getVpcPeeringInstanceListRequest.sortedBy) &&
				Objects.equals(this.sortingOrder, getVpcPeeringInstanceListRequest.sortingOrder) &&
				Objects.equals(this.responseFormatType, getVpcPeeringInstanceListRequest.responseFormatType);
	}

	@Override
	public int hashCode() {
		return Objects.hash(regionCode, vpcPeeringInstanceNoList, sourceVpcName, vpcPeeringName, targetVpcName, vpcPeeringInstanceStatusCode, pageNo, pageSize, sortedBy, sortingOrder, responseFormatType);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class GetVpcPeeringInstanceListRequest {\n");
		
		sb.append("		regionCode: ").append(toIndentedString(regionCode)).append("\n");
		sb.append("		vpcPeeringInstanceNoList: ").append(toIndentedString(vpcPeeringInstanceNoList)).append("\n");
		sb.append("		sourceVpcName: ").append(toIndentedString(sourceVpcName)).append("\n");
		sb.append("		vpcPeeringName: ").append(toIndentedString(vpcPeeringName)).append("\n");
		sb.append("		targetVpcName: ").append(toIndentedString(targetVpcName)).append("\n");
		sb.append("		vpcPeeringInstanceStatusCode: ").append(toIndentedString(vpcPeeringInstanceStatusCode)).append("\n");
		sb.append("		pageNo: ").append(toIndentedString(pageNo)).append("\n");
		sb.append("		pageSize: ").append(toIndentedString(pageSize)).append("\n");
		sb.append("		sortedBy: ").append(toIndentedString(sortedBy)).append("\n");
		sb.append("		sortingOrder: ").append(toIndentedString(sortingOrder)).append("\n");
		sb.append("		responseFormatType: ").append(toIndentedString(responseFormatType)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

