/*
 * vpc
 * VPC Network 관련 API<br/>https://ncloud.apigw.ntruss.com/vpc/v2
 *
 * NBP corp.
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.vpc.model;

import java.util.Objects;
import com.ncloud.vpc.model.CommonCode;

/**
 * VpcPeeringInstance
 */
public class VpcPeeringInstance {
	private String vpcPeeringInstanceNo = null;

	private String vpcPeeringName = null;

	private String regionCode = null;

	private String createDate = null;

	private String lastModifiyDate = null;

	private CommonCode vpcPeeringInstanceStatus = null;

	private String vpcPeeringInstanceStatusName = null;

	private CommonCode vpcPeeringInstanceOperation = null;

	private String sourceVpcNo = null;

	private String sourceVpcName = null;

	private String sourceVpcIpv4CidrBlock = null;

	private String sourceVpcLoginId = null;

	private String targetVpcNo = null;

	private String targetVpcName = null;

	private String targetVpcIpv4CidrBlock = null;

	private String targetVpcLoginId = null;

	private String vpcPeeringDescription = null;

	private Boolean hasReverseVpcPeering = null;

	private Boolean isBetweenAccounts = null;

	private String reverseVpcPeeringInstanceNo = null;

	public VpcPeeringInstance vpcPeeringInstanceNo(String vpcPeeringInstanceNo) {
		this.vpcPeeringInstanceNo = vpcPeeringInstanceNo;
		return this;
	}

	 /**
	 * VPCPeering인스턴스번호
	 * @return vpcPeeringInstanceNo
	**/
	public String getVpcPeeringInstanceNo() {
		return vpcPeeringInstanceNo;
	}

	public void setVpcPeeringInstanceNo(String vpcPeeringInstanceNo) {
		this.vpcPeeringInstanceNo = vpcPeeringInstanceNo;
	}

	public VpcPeeringInstance vpcPeeringName(String vpcPeeringName) {
		this.vpcPeeringName = vpcPeeringName;
		return this;
	}

	 /**
	 * VPCPeering이름
	 * @return vpcPeeringName
	**/
	public String getVpcPeeringName() {
		return vpcPeeringName;
	}

	public void setVpcPeeringName(String vpcPeeringName) {
		this.vpcPeeringName = vpcPeeringName;
	}

	public VpcPeeringInstance regionCode(String regionCode) {
		this.regionCode = regionCode;
		return this;
	}

	 /**
	 * REGION코드
	 * @return regionCode
	**/
	public String getRegionCode() {
		return regionCode;
	}

	public void setRegionCode(String regionCode) {
		this.regionCode = regionCode;
	}

	public VpcPeeringInstance createDate(String createDate) {
		this.createDate = createDate;
		return this;
	}

	 /**
	 * 생성일시
	 * @return createDate
	**/
	public String getCreateDate() {
		return createDate;
	}

	public void setCreateDate(String createDate) {
		this.createDate = createDate;
	}

	public VpcPeeringInstance lastModifiyDate(String lastModifiyDate) {
		this.lastModifiyDate = lastModifiyDate;
		return this;
	}

	 /**
	 * 마지막수정일시
	 * @return lastModifiyDate
	**/
	public String getLastModifiyDate() {
		return lastModifiyDate;
	}

	public void setLastModifiyDate(String lastModifiyDate) {
		this.lastModifiyDate = lastModifiyDate;
	}

	public VpcPeeringInstance vpcPeeringInstanceStatus(CommonCode vpcPeeringInstanceStatus) {
		this.vpcPeeringInstanceStatus = vpcPeeringInstanceStatus;
		return this;
	}

	 /**
	 * VPCPeering인스턴스상태
	 * @return vpcPeeringInstanceStatus
	**/
	public CommonCode getVpcPeeringInstanceStatus() {
		return vpcPeeringInstanceStatus;
	}

	public void setVpcPeeringInstanceStatus(CommonCode vpcPeeringInstanceStatus) {
		this.vpcPeeringInstanceStatus = vpcPeeringInstanceStatus;
	}

	public VpcPeeringInstance vpcPeeringInstanceStatusName(String vpcPeeringInstanceStatusName) {
		this.vpcPeeringInstanceStatusName = vpcPeeringInstanceStatusName;
		return this;
	}

	 /**
	 * VPCPeering인스턴스상태이름
	 * @return vpcPeeringInstanceStatusName
	**/
	public String getVpcPeeringInstanceStatusName() {
		return vpcPeeringInstanceStatusName;
	}

	public void setVpcPeeringInstanceStatusName(String vpcPeeringInstanceStatusName) {
		this.vpcPeeringInstanceStatusName = vpcPeeringInstanceStatusName;
	}

	public VpcPeeringInstance vpcPeeringInstanceOperation(CommonCode vpcPeeringInstanceOperation) {
		this.vpcPeeringInstanceOperation = vpcPeeringInstanceOperation;
		return this;
	}

	 /**
	 * VPCPeering인스턴스OP
	 * @return vpcPeeringInstanceOperation
	**/
	public CommonCode getVpcPeeringInstanceOperation() {
		return vpcPeeringInstanceOperation;
	}

	public void setVpcPeeringInstanceOperation(CommonCode vpcPeeringInstanceOperation) {
		this.vpcPeeringInstanceOperation = vpcPeeringInstanceOperation;
	}

	public VpcPeeringInstance sourceVpcNo(String sourceVpcNo) {
		this.sourceVpcNo = sourceVpcNo;
		return this;
	}

	 /**
	 * 요청VPC번호
	 * @return sourceVpcNo
	**/
	public String getSourceVpcNo() {
		return sourceVpcNo;
	}

	public void setSourceVpcNo(String sourceVpcNo) {
		this.sourceVpcNo = sourceVpcNo;
	}

	public VpcPeeringInstance sourceVpcName(String sourceVpcName) {
		this.sourceVpcName = sourceVpcName;
		return this;
	}

	 /**
	 * 요청VPC이름
	 * @return sourceVpcName
	**/
	public String getSourceVpcName() {
		return sourceVpcName;
	}

	public void setSourceVpcName(String sourceVpcName) {
		this.sourceVpcName = sourceVpcName;
	}

	public VpcPeeringInstance sourceVpcIpv4CidrBlock(String sourceVpcIpv4CidrBlock) {
		this.sourceVpcIpv4CidrBlock = sourceVpcIpv4CidrBlock;
		return this;
	}

	 /**
	 * 요청VPC IPv4 CIDR블록
	 * @return sourceVpcIpv4CidrBlock
	**/
	public String getSourceVpcIpv4CidrBlock() {
		return sourceVpcIpv4CidrBlock;
	}

	public void setSourceVpcIpv4CidrBlock(String sourceVpcIpv4CidrBlock) {
		this.sourceVpcIpv4CidrBlock = sourceVpcIpv4CidrBlock;
	}

	public VpcPeeringInstance sourceVpcLoginId(String sourceVpcLoginId) {
		this.sourceVpcLoginId = sourceVpcLoginId;
		return this;
	}

	 /**
	 * 요청VPC소유자ID
	 * @return sourceVpcLoginId
	**/
	public String getSourceVpcLoginId() {
		return sourceVpcLoginId;
	}

	public void setSourceVpcLoginId(String sourceVpcLoginId) {
		this.sourceVpcLoginId = sourceVpcLoginId;
	}

	public VpcPeeringInstance targetVpcNo(String targetVpcNo) {
		this.targetVpcNo = targetVpcNo;
		return this;
	}

	 /**
	 * 수락VPC번호
	 * @return targetVpcNo
	**/
	public String getTargetVpcNo() {
		return targetVpcNo;
	}

	public void setTargetVpcNo(String targetVpcNo) {
		this.targetVpcNo = targetVpcNo;
	}

	public VpcPeeringInstance targetVpcName(String targetVpcName) {
		this.targetVpcName = targetVpcName;
		return this;
	}

	 /**
	 * 수락VPC이름
	 * @return targetVpcName
	**/
	public String getTargetVpcName() {
		return targetVpcName;
	}

	public void setTargetVpcName(String targetVpcName) {
		this.targetVpcName = targetVpcName;
	}

	public VpcPeeringInstance targetVpcIpv4CidrBlock(String targetVpcIpv4CidrBlock) {
		this.targetVpcIpv4CidrBlock = targetVpcIpv4CidrBlock;
		return this;
	}

	 /**
	 * 수락VPC IPv4 CIDR블록
	 * @return targetVpcIpv4CidrBlock
	**/
	public String getTargetVpcIpv4CidrBlock() {
		return targetVpcIpv4CidrBlock;
	}

	public void setTargetVpcIpv4CidrBlock(String targetVpcIpv4CidrBlock) {
		this.targetVpcIpv4CidrBlock = targetVpcIpv4CidrBlock;
	}

	public VpcPeeringInstance targetVpcLoginId(String targetVpcLoginId) {
		this.targetVpcLoginId = targetVpcLoginId;
		return this;
	}

	 /**
	 * 수락VPC소유자ID
	 * @return targetVpcLoginId
	**/
	public String getTargetVpcLoginId() {
		return targetVpcLoginId;
	}

	public void setTargetVpcLoginId(String targetVpcLoginId) {
		this.targetVpcLoginId = targetVpcLoginId;
	}

	public VpcPeeringInstance vpcPeeringDescription(String vpcPeeringDescription) {
		this.vpcPeeringDescription = vpcPeeringDescription;
		return this;
	}

	 /**
	 * VPCPeering설명
	 * @return vpcPeeringDescription
	**/
	public String getVpcPeeringDescription() {
		return vpcPeeringDescription;
	}

	public void setVpcPeeringDescription(String vpcPeeringDescription) {
		this.vpcPeeringDescription = vpcPeeringDescription;
	}

	public VpcPeeringInstance hasReverseVpcPeering(Boolean hasReverseVpcPeering) {
		this.hasReverseVpcPeering = hasReverseVpcPeering;
		return this;
	}

	 /**
	 * 역방향VPCPeering존재여부
	 * @return hasReverseVpcPeering
	**/
	public Boolean isHasReverseVpcPeering() {
		return hasReverseVpcPeering;
	}

	public void setHasReverseVpcPeering(Boolean hasReverseVpcPeering) {
		this.hasReverseVpcPeering = hasReverseVpcPeering;
	}

	public VpcPeeringInstance isBetweenAccounts(Boolean isBetweenAccounts) {
		this.isBetweenAccounts = isBetweenAccounts;
		return this;
	}

	 /**
	 * 계정간의VPCPeering여부
	 * @return isBetweenAccounts
	**/
	public Boolean isIsBetweenAccounts() {
		return isBetweenAccounts;
	}

	public void setIsBetweenAccounts(Boolean isBetweenAccounts) {
		this.isBetweenAccounts = isBetweenAccounts;
	}

	public VpcPeeringInstance reverseVpcPeeringInstanceNo(String reverseVpcPeeringInstanceNo) {
		this.reverseVpcPeeringInstanceNo = reverseVpcPeeringInstanceNo;
		return this;
	}

	 /**
	 * 역방향VPCPeering인스턴스번호
	 * @return reverseVpcPeeringInstanceNo
	**/
	public String getReverseVpcPeeringInstanceNo() {
		return reverseVpcPeeringInstanceNo;
	}

	public void setReverseVpcPeeringInstanceNo(String reverseVpcPeeringInstanceNo) {
		this.reverseVpcPeeringInstanceNo = reverseVpcPeeringInstanceNo;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		VpcPeeringInstance vpcPeeringInstance = (VpcPeeringInstance) o;
		return Objects.equals(this.vpcPeeringInstanceNo, vpcPeeringInstance.vpcPeeringInstanceNo) &&
				Objects.equals(this.vpcPeeringName, vpcPeeringInstance.vpcPeeringName) &&
				Objects.equals(this.regionCode, vpcPeeringInstance.regionCode) &&
				Objects.equals(this.createDate, vpcPeeringInstance.createDate) &&
				Objects.equals(this.lastModifiyDate, vpcPeeringInstance.lastModifiyDate) &&
				Objects.equals(this.vpcPeeringInstanceStatus, vpcPeeringInstance.vpcPeeringInstanceStatus) &&
				Objects.equals(this.vpcPeeringInstanceStatusName, vpcPeeringInstance.vpcPeeringInstanceStatusName) &&
				Objects.equals(this.vpcPeeringInstanceOperation, vpcPeeringInstance.vpcPeeringInstanceOperation) &&
				Objects.equals(this.sourceVpcNo, vpcPeeringInstance.sourceVpcNo) &&
				Objects.equals(this.sourceVpcName, vpcPeeringInstance.sourceVpcName) &&
				Objects.equals(this.sourceVpcIpv4CidrBlock, vpcPeeringInstance.sourceVpcIpv4CidrBlock) &&
				Objects.equals(this.sourceVpcLoginId, vpcPeeringInstance.sourceVpcLoginId) &&
				Objects.equals(this.targetVpcNo, vpcPeeringInstance.targetVpcNo) &&
				Objects.equals(this.targetVpcName, vpcPeeringInstance.targetVpcName) &&
				Objects.equals(this.targetVpcIpv4CidrBlock, vpcPeeringInstance.targetVpcIpv4CidrBlock) &&
				Objects.equals(this.targetVpcLoginId, vpcPeeringInstance.targetVpcLoginId) &&
				Objects.equals(this.vpcPeeringDescription, vpcPeeringInstance.vpcPeeringDescription) &&
				Objects.equals(this.hasReverseVpcPeering, vpcPeeringInstance.hasReverseVpcPeering) &&
				Objects.equals(this.isBetweenAccounts, vpcPeeringInstance.isBetweenAccounts) &&
				Objects.equals(this.reverseVpcPeeringInstanceNo, vpcPeeringInstance.reverseVpcPeeringInstanceNo);
	}

	@Override
	public int hashCode() {
		return Objects.hash(vpcPeeringInstanceNo, vpcPeeringName, regionCode, createDate, lastModifiyDate, vpcPeeringInstanceStatus, vpcPeeringInstanceStatusName, vpcPeeringInstanceOperation, sourceVpcNo, sourceVpcName, sourceVpcIpv4CidrBlock, sourceVpcLoginId, targetVpcNo, targetVpcName, targetVpcIpv4CidrBlock, targetVpcLoginId, vpcPeeringDescription, hasReverseVpcPeering, isBetweenAccounts, reverseVpcPeeringInstanceNo);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class VpcPeeringInstance {\n");
		
		sb.append("		vpcPeeringInstanceNo: ").append(toIndentedString(vpcPeeringInstanceNo)).append("\n");
		sb.append("		vpcPeeringName: ").append(toIndentedString(vpcPeeringName)).append("\n");
		sb.append("		regionCode: ").append(toIndentedString(regionCode)).append("\n");
		sb.append("		createDate: ").append(toIndentedString(createDate)).append("\n");
		sb.append("		lastModifiyDate: ").append(toIndentedString(lastModifiyDate)).append("\n");
		sb.append("		vpcPeeringInstanceStatus: ").append(toIndentedString(vpcPeeringInstanceStatus)).append("\n");
		sb.append("		vpcPeeringInstanceStatusName: ").append(toIndentedString(vpcPeeringInstanceStatusName)).append("\n");
		sb.append("		vpcPeeringInstanceOperation: ").append(toIndentedString(vpcPeeringInstanceOperation)).append("\n");
		sb.append("		sourceVpcNo: ").append(toIndentedString(sourceVpcNo)).append("\n");
		sb.append("		sourceVpcName: ").append(toIndentedString(sourceVpcName)).append("\n");
		sb.append("		sourceVpcIpv4CidrBlock: ").append(toIndentedString(sourceVpcIpv4CidrBlock)).append("\n");
		sb.append("		sourceVpcLoginId: ").append(toIndentedString(sourceVpcLoginId)).append("\n");
		sb.append("		targetVpcNo: ").append(toIndentedString(targetVpcNo)).append("\n");
		sb.append("		targetVpcName: ").append(toIndentedString(targetVpcName)).append("\n");
		sb.append("		targetVpcIpv4CidrBlock: ").append(toIndentedString(targetVpcIpv4CidrBlock)).append("\n");
		sb.append("		targetVpcLoginId: ").append(toIndentedString(targetVpcLoginId)).append("\n");
		sb.append("		vpcPeeringDescription: ").append(toIndentedString(vpcPeeringDescription)).append("\n");
		sb.append("		hasReverseVpcPeering: ").append(toIndentedString(hasReverseVpcPeering)).append("\n");
		sb.append("		isBetweenAccounts: ").append(toIndentedString(isBetweenAccounts)).append("\n");
		sb.append("		reverseVpcPeeringInstanceNo: ").append(toIndentedString(reverseVpcPeeringInstanceNo)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

