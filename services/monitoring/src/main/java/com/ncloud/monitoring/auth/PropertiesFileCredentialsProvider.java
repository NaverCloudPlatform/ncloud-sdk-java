/*
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.monitoring.auth;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;

import com.ncloud.monitoring.exception.SdkException;

/**
 * The type Properties file credentials provider.
 */
public class PropertiesFileCredentialsProvider implements CredentialsProvider {
	private final String path;

	/**
	 * Instantiates a new Properties file credentials provider.
	 *
	 * @param path the path
	 */
	public PropertiesFileCredentialsProvider(String path) {
		this.path = path;
	}

	public Credentials getCredentials() {
		Properties properties = new Properties();
		FileInputStream fileInputStream = null;
		try {
			fileInputStream = new FileInputStream(path);
			properties.load(fileInputStream);
		} catch (IOException e) {
			throw new SdkException("Failed to load credentials from the " + path + " file", e);
		} finally {
			try {
				if (fileInputStream != null) {
					fileInputStream.close();
				}
			} catch (IOException e) {
			}
		}

		String type = properties.getProperty("type");
		if (type == null) {
			throw new SdkException("It doesn't contain the required properties 'type'.");
		}

		if (type.equalsIgnoreCase("default") == true) {
			if (properties.containsKey("apiKey") == false) {
				throw new SdkException("It doesn't contain the required properties 'apiKey'.");
			}
			return new DefaultCredentials(properties.getProperty("apiKey"));
		} else if (type.equalsIgnoreCase("iam") == true) {
			if (properties.containsKey("accessKey") == false || properties.containsKey("secretKey") == false) {
				throw new SdkException("It doesn't contain the required properties 'accessKey' and 'secretKey'.");
			}
			return new IamCredentials(properties.getProperty("apiKey"), properties.getProperty("accessKey"), properties.getProperty("secretKey"));
		}
		throw new SdkException("");
	}

	public void refresh() {
	}
}
