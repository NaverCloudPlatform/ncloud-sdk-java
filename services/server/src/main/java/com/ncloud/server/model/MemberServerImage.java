/*
 * server
 * <br/>https://ncloud.apigw.ntruss.com/server/v2
 *
 * NBP corp.
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.server.model;

import java.util.Objects;
import com.ncloud.server.model.CommonCode;
import com.ncloud.server.model.Region;
import com.ncloud.server.model.Zone;
import java.util.ArrayList;
import java.util.List;

/**
 * MemberServerImage
 */
public class MemberServerImage {
	private String memberServerImageNo = null;

	private String memberServerImageName = null;

	private String memberServerImageDescription = null;

	private String originalServerInstanceNo = null;

	private String originalServerProductCode = null;

	private String originalServerName = null;

	private CommonCode originalBaseBlockStorageDiskType = null;

	private String originalServerImageProductCode = null;

	private String originalOsInformation = null;

	private String originalServerImageName = null;

	private String memberServerImageStatusName = null;

	private CommonCode memberServerImageStatus = null;

	private CommonCode memberServerImageOperation = null;

	private CommonCode memberServerImagePlatformType = null;

	private Region region = null;

	private Zone zone = null;

	private String createDate = null;

	private Integer memberServerImageBlockStorageTotalRows = null;

	private Long memberServerImageBlockStorageTotalSize = null;

	private CommonCode shareStatus = null;

	private List<String> sharedLoginIdList = null;

	public MemberServerImage memberServerImageNo(String memberServerImageNo) {
		this.memberServerImageNo = memberServerImageNo;
		return this;
	}

	 /**
	 * 회원서버이미지번호
	 * @return memberServerImageNo
	**/
	public String getMemberServerImageNo() {
		return memberServerImageNo;
	}

	public void setMemberServerImageNo(String memberServerImageNo) {
		this.memberServerImageNo = memberServerImageNo;
	}

	public MemberServerImage memberServerImageName(String memberServerImageName) {
		this.memberServerImageName = memberServerImageName;
		return this;
	}

	 /**
	 * 회원서버이미지명
	 * @return memberServerImageName
	**/
	public String getMemberServerImageName() {
		return memberServerImageName;
	}

	public void setMemberServerImageName(String memberServerImageName) {
		this.memberServerImageName = memberServerImageName;
	}

	public MemberServerImage memberServerImageDescription(String memberServerImageDescription) {
		this.memberServerImageDescription = memberServerImageDescription;
		return this;
	}

	 /**
	 * 회원서버이미지설명
	 * @return memberServerImageDescription
	**/
	public String getMemberServerImageDescription() {
		return memberServerImageDescription;
	}

	public void setMemberServerImageDescription(String memberServerImageDescription) {
		this.memberServerImageDescription = memberServerImageDescription;
	}

	public MemberServerImage originalServerInstanceNo(String originalServerInstanceNo) {
		this.originalServerInstanceNo = originalServerInstanceNo;
		return this;
	}

	 /**
	 * 원본서버인스턴스번호
	 * @return originalServerInstanceNo
	**/
	public String getOriginalServerInstanceNo() {
		return originalServerInstanceNo;
	}

	public void setOriginalServerInstanceNo(String originalServerInstanceNo) {
		this.originalServerInstanceNo = originalServerInstanceNo;
	}

	public MemberServerImage originalServerProductCode(String originalServerProductCode) {
		this.originalServerProductCode = originalServerProductCode;
		return this;
	}

	 /**
	 * 원본서버상품코드
	 * @return originalServerProductCode
	**/
	public String getOriginalServerProductCode() {
		return originalServerProductCode;
	}

	public void setOriginalServerProductCode(String originalServerProductCode) {
		this.originalServerProductCode = originalServerProductCode;
	}

	public MemberServerImage originalServerName(String originalServerName) {
		this.originalServerName = originalServerName;
		return this;
	}

	 /**
	 * 원본서버명
	 * @return originalServerName
	**/
	public String getOriginalServerName() {
		return originalServerName;
	}

	public void setOriginalServerName(String originalServerName) {
		this.originalServerName = originalServerName;
	}

	public MemberServerImage originalBaseBlockStorageDiskType(CommonCode originalBaseBlockStorageDiskType) {
		this.originalBaseBlockStorageDiskType = originalBaseBlockStorageDiskType;
		return this;
	}

	 /**
	 * 원본서버기본블록스토리지디스크유형
	 * @return originalBaseBlockStorageDiskType
	**/
	public CommonCode getOriginalBaseBlockStorageDiskType() {
		return originalBaseBlockStorageDiskType;
	}

	public void setOriginalBaseBlockStorageDiskType(CommonCode originalBaseBlockStorageDiskType) {
		this.originalBaseBlockStorageDiskType = originalBaseBlockStorageDiskType;
	}

	public MemberServerImage originalServerImageProductCode(String originalServerImageProductCode) {
		this.originalServerImageProductCode = originalServerImageProductCode;
		return this;
	}

	 /**
	 * 원본서버이미지상품코드
	 * @return originalServerImageProductCode
	**/
	public String getOriginalServerImageProductCode() {
		return originalServerImageProductCode;
	}

	public void setOriginalServerImageProductCode(String originalServerImageProductCode) {
		this.originalServerImageProductCode = originalServerImageProductCode;
	}

	public MemberServerImage originalOsInformation(String originalOsInformation) {
		this.originalOsInformation = originalOsInformation;
		return this;
	}

	 /**
	 * 원본OS정보
	 * @return originalOsInformation
	**/
	public String getOriginalOsInformation() {
		return originalOsInformation;
	}

	public void setOriginalOsInformation(String originalOsInformation) {
		this.originalOsInformation = originalOsInformation;
	}

	public MemberServerImage originalServerImageName(String originalServerImageName) {
		this.originalServerImageName = originalServerImageName;
		return this;
	}

	 /**
	 * 원본서버이미지명
	 * @return originalServerImageName
	**/
	public String getOriginalServerImageName() {
		return originalServerImageName;
	}

	public void setOriginalServerImageName(String originalServerImageName) {
		this.originalServerImageName = originalServerImageName;
	}

	public MemberServerImage memberServerImageStatusName(String memberServerImageStatusName) {
		this.memberServerImageStatusName = memberServerImageStatusName;
		return this;
	}

	 /**
	 * 원본서버이미지상태명
	 * @return memberServerImageStatusName
	**/
	public String getMemberServerImageStatusName() {
		return memberServerImageStatusName;
	}

	public void setMemberServerImageStatusName(String memberServerImageStatusName) {
		this.memberServerImageStatusName = memberServerImageStatusName;
	}

	public MemberServerImage memberServerImageStatus(CommonCode memberServerImageStatus) {
		this.memberServerImageStatus = memberServerImageStatus;
		return this;
	}

	 /**
	 * 원본서버이미지상태
	 * @return memberServerImageStatus
	**/
	public CommonCode getMemberServerImageStatus() {
		return memberServerImageStatus;
	}

	public void setMemberServerImageStatus(CommonCode memberServerImageStatus) {
		this.memberServerImageStatus = memberServerImageStatus;
	}

	public MemberServerImage memberServerImageOperation(CommonCode memberServerImageOperation) {
		this.memberServerImageOperation = memberServerImageOperation;
		return this;
	}

	 /**
	 * 원본서버이미지OP
	 * @return memberServerImageOperation
	**/
	public CommonCode getMemberServerImageOperation() {
		return memberServerImageOperation;
	}

	public void setMemberServerImageOperation(CommonCode memberServerImageOperation) {
		this.memberServerImageOperation = memberServerImageOperation;
	}

	public MemberServerImage memberServerImagePlatformType(CommonCode memberServerImagePlatformType) {
		this.memberServerImagePlatformType = memberServerImagePlatformType;
		return this;
	}

	 /**
	 * 회원서버이미지플랫폼구분
	 * @return memberServerImagePlatformType
	**/
	public CommonCode getMemberServerImagePlatformType() {
		return memberServerImagePlatformType;
	}

	public void setMemberServerImagePlatformType(CommonCode memberServerImagePlatformType) {
		this.memberServerImagePlatformType = memberServerImagePlatformType;
	}

	public MemberServerImage region(Region region) {
		this.region = region;
		return this;
	}

	 /**
	 * 리전
	 * @return region
	**/
	public Region getRegion() {
		return region;
	}

	public void setRegion(Region region) {
		this.region = region;
	}

	public MemberServerImage zone(Zone zone) {
		this.zone = zone;
		return this;
	}

	 /**
	 * ZONE
	 * @return zone
	**/
	public Zone getZone() {
		return zone;
	}

	public void setZone(Zone zone) {
		this.zone = zone;
	}

	public MemberServerImage createDate(String createDate) {
		this.createDate = createDate;
		return this;
	}

	 /**
	 * 생성일시
	 * @return createDate
	**/
	public String getCreateDate() {
		return createDate;
	}

	public void setCreateDate(String createDate) {
		this.createDate = createDate;
	}

	public MemberServerImage memberServerImageBlockStorageTotalRows(Integer memberServerImageBlockStorageTotalRows) {
		this.memberServerImageBlockStorageTotalRows = memberServerImageBlockStorageTotalRows;
		return this;
	}

	 /**
	 * 회원서버이미지블록스토리지인스턴스총 개수
	 * @return memberServerImageBlockStorageTotalRows
	**/
	public Integer getMemberServerImageBlockStorageTotalRows() {
		return memberServerImageBlockStorageTotalRows;
	}

	public void setMemberServerImageBlockStorageTotalRows(Integer memberServerImageBlockStorageTotalRows) {
		this.memberServerImageBlockStorageTotalRows = memberServerImageBlockStorageTotalRows;
	}

	public MemberServerImage memberServerImageBlockStorageTotalSize(Long memberServerImageBlockStorageTotalSize) {
		this.memberServerImageBlockStorageTotalSize = memberServerImageBlockStorageTotalSize;
		return this;
	}

	 /**
	 * 회원서버이미지총사이즈
	 * @return memberServerImageBlockStorageTotalSize
	**/
	public Long getMemberServerImageBlockStorageTotalSize() {
		return memberServerImageBlockStorageTotalSize;
	}

	public void setMemberServerImageBlockStorageTotalSize(Long memberServerImageBlockStorageTotalSize) {
		this.memberServerImageBlockStorageTotalSize = memberServerImageBlockStorageTotalSize;
	}

	public MemberServerImage shareStatus(CommonCode shareStatus) {
		this.shareStatus = shareStatus;
		return this;
	}

	 /**
	 * 공유상태
	 * @return shareStatus
	**/
	public CommonCode getShareStatus() {
		return shareStatus;
	}

	public void setShareStatus(CommonCode shareStatus) {
		this.shareStatus = shareStatus;
	}

	public MemberServerImage sharedLoginIdList(List<String> sharedLoginIdList) {
		this.sharedLoginIdList = sharedLoginIdList;
		return this;
	}

	public MemberServerImage addSharedLoginIdListItem(String sharedLoginIdListItem) {
		if (this.sharedLoginIdList == null) {
			this.sharedLoginIdList = new ArrayList<String>();
		}
		this.sharedLoginIdList.add(sharedLoginIdListItem);
		return this;
	}

	 /**
	 * 공유받는로그인ID리스트
	 * @return sharedLoginIdList
	**/
	public List<String> getSharedLoginIdList() {
		return sharedLoginIdList;
	}

	public void setSharedLoginIdList(List<String> sharedLoginIdList) {
		this.sharedLoginIdList = sharedLoginIdList;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		MemberServerImage memberServerImage = (MemberServerImage) o;
		return Objects.equals(this.memberServerImageNo, memberServerImage.memberServerImageNo) &&
				Objects.equals(this.memberServerImageName, memberServerImage.memberServerImageName) &&
				Objects.equals(this.memberServerImageDescription, memberServerImage.memberServerImageDescription) &&
				Objects.equals(this.originalServerInstanceNo, memberServerImage.originalServerInstanceNo) &&
				Objects.equals(this.originalServerProductCode, memberServerImage.originalServerProductCode) &&
				Objects.equals(this.originalServerName, memberServerImage.originalServerName) &&
				Objects.equals(this.originalBaseBlockStorageDiskType, memberServerImage.originalBaseBlockStorageDiskType) &&
				Objects.equals(this.originalServerImageProductCode, memberServerImage.originalServerImageProductCode) &&
				Objects.equals(this.originalOsInformation, memberServerImage.originalOsInformation) &&
				Objects.equals(this.originalServerImageName, memberServerImage.originalServerImageName) &&
				Objects.equals(this.memberServerImageStatusName, memberServerImage.memberServerImageStatusName) &&
				Objects.equals(this.memberServerImageStatus, memberServerImage.memberServerImageStatus) &&
				Objects.equals(this.memberServerImageOperation, memberServerImage.memberServerImageOperation) &&
				Objects.equals(this.memberServerImagePlatformType, memberServerImage.memberServerImagePlatformType) &&
				Objects.equals(this.region, memberServerImage.region) &&
				Objects.equals(this.zone, memberServerImage.zone) &&
				Objects.equals(this.createDate, memberServerImage.createDate) &&
				Objects.equals(this.memberServerImageBlockStorageTotalRows, memberServerImage.memberServerImageBlockStorageTotalRows) &&
				Objects.equals(this.memberServerImageBlockStorageTotalSize, memberServerImage.memberServerImageBlockStorageTotalSize) &&
				Objects.equals(this.shareStatus, memberServerImage.shareStatus) &&
				Objects.equals(this.sharedLoginIdList, memberServerImage.sharedLoginIdList);
	}

	@Override
	public int hashCode() {
		return Objects.hash(memberServerImageNo, memberServerImageName, memberServerImageDescription, originalServerInstanceNo, originalServerProductCode, originalServerName, originalBaseBlockStorageDiskType, originalServerImageProductCode, originalOsInformation, originalServerImageName, memberServerImageStatusName, memberServerImageStatus, memberServerImageOperation, memberServerImagePlatformType, region, zone, createDate, memberServerImageBlockStorageTotalRows, memberServerImageBlockStorageTotalSize, shareStatus, sharedLoginIdList);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class MemberServerImage {\n");
		
		sb.append("		memberServerImageNo: ").append(toIndentedString(memberServerImageNo)).append("\n");
		sb.append("		memberServerImageName: ").append(toIndentedString(memberServerImageName)).append("\n");
		sb.append("		memberServerImageDescription: ").append(toIndentedString(memberServerImageDescription)).append("\n");
		sb.append("		originalServerInstanceNo: ").append(toIndentedString(originalServerInstanceNo)).append("\n");
		sb.append("		originalServerProductCode: ").append(toIndentedString(originalServerProductCode)).append("\n");
		sb.append("		originalServerName: ").append(toIndentedString(originalServerName)).append("\n");
		sb.append("		originalBaseBlockStorageDiskType: ").append(toIndentedString(originalBaseBlockStorageDiskType)).append("\n");
		sb.append("		originalServerImageProductCode: ").append(toIndentedString(originalServerImageProductCode)).append("\n");
		sb.append("		originalOsInformation: ").append(toIndentedString(originalOsInformation)).append("\n");
		sb.append("		originalServerImageName: ").append(toIndentedString(originalServerImageName)).append("\n");
		sb.append("		memberServerImageStatusName: ").append(toIndentedString(memberServerImageStatusName)).append("\n");
		sb.append("		memberServerImageStatus: ").append(toIndentedString(memberServerImageStatus)).append("\n");
		sb.append("		memberServerImageOperation: ").append(toIndentedString(memberServerImageOperation)).append("\n");
		sb.append("		memberServerImagePlatformType: ").append(toIndentedString(memberServerImagePlatformType)).append("\n");
		sb.append("		region: ").append(toIndentedString(region)).append("\n");
		sb.append("		zone: ").append(toIndentedString(zone)).append("\n");
		sb.append("		createDate: ").append(toIndentedString(createDate)).append("\n");
		sb.append("		memberServerImageBlockStorageTotalRows: ").append(toIndentedString(memberServerImageBlockStorageTotalRows)).append("\n");
		sb.append("		memberServerImageBlockStorageTotalSize: ").append(toIndentedString(memberServerImageBlockStorageTotalSize)).append("\n");
		sb.append("		shareStatus: ").append(toIndentedString(shareStatus)).append("\n");
		sb.append("		sharedLoginIdList: ").append(toIndentedString(sharedLoginIdList)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

