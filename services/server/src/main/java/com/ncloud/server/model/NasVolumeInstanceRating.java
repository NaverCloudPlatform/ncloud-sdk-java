/*
 * server
 * <br/>https://ncloud.apigw.ntruss.com/server/v2
 *
 * NBP corp.
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.server.model;

import java.util.Objects;

/**
 * NasVolumeInstanceRating
 */
public class NasVolumeInstanceRating {
	private String ratingTime = null;

	private Long volumeSize = null;

	private Long volumeUseSize = null;

	private Float volumeUseRatio = null;

	private Long averageVolumeSize = null;

	private Long averageVolumeUseSize = null;

	private Float averageVolumeUseRatio = null;

	private Long maxVolumeUseSize = null;

	private Float maxVolumeUseRatio = null;

	private Long minVolumeUseSize = null;

	private Float minVolumeUseRatio = null;

	private Long snapshotVolumeSize = null;

	private Long snapshotVolumeUseSize = null;

	private Float snapshotVolumeUseRatio = null;

	private Long snapshotAverageVolumeSize = null;

	private Long snapshotAverageVolumeUseSize = null;

	private Float snapshotAverageVolumeUseRatio = null;

	private Long snapshotMaxVolumeUseSize = null;

	private Float snapshotMaxVolumeUseRatio = null;

	private Long snapshotMinVolumeUseSize = null;

	private Float snapshotMinVolumeUseRatio = null;

	public NasVolumeInstanceRating ratingTime(String ratingTime) {
		this.ratingTime = ratingTime;
		return this;
	}

	 /**
	 * 측정시간
	 * @return ratingTime
	**/
	public String getRatingTime() {
		return ratingTime;
	}

	public void setRatingTime(String ratingTime) {
		this.ratingTime = ratingTime;
	}

	public NasVolumeInstanceRating volumeSize(Long volumeSize) {
		this.volumeSize = volumeSize;
		return this;
	}

	 /**
	 * 볼륨사이즈
	 * @return volumeSize
	**/
	public Long getVolumeSize() {
		return volumeSize;
	}

	public void setVolumeSize(Long volumeSize) {
		this.volumeSize = volumeSize;
	}

	public NasVolumeInstanceRating volumeUseSize(Long volumeUseSize) {
		this.volumeUseSize = volumeUseSize;
		return this;
	}

	 /**
	 * 볼륨사용사이즈
	 * @return volumeUseSize
	**/
	public Long getVolumeUseSize() {
		return volumeUseSize;
	}

	public void setVolumeUseSize(Long volumeUseSize) {
		this.volumeUseSize = volumeUseSize;
	}

	public NasVolumeInstanceRating volumeUseRatio(Float volumeUseRatio) {
		this.volumeUseRatio = volumeUseRatio;
		return this;
	}

	 /**
	 * 볼륨사용비율
	 * @return volumeUseRatio
	**/
	public Float getVolumeUseRatio() {
		return volumeUseRatio;
	}

	public void setVolumeUseRatio(Float volumeUseRatio) {
		this.volumeUseRatio = volumeUseRatio;
	}

	public NasVolumeInstanceRating averageVolumeSize(Long averageVolumeSize) {
		this.averageVolumeSize = averageVolumeSize;
		return this;
	}

	 /**
	 * 평균볼륨사이즈
	 * @return averageVolumeSize
	**/
	public Long getAverageVolumeSize() {
		return averageVolumeSize;
	}

	public void setAverageVolumeSize(Long averageVolumeSize) {
		this.averageVolumeSize = averageVolumeSize;
	}

	public NasVolumeInstanceRating averageVolumeUseSize(Long averageVolumeUseSize) {
		this.averageVolumeUseSize = averageVolumeUseSize;
		return this;
	}

	 /**
	 * 평균볼륨사용사이즈
	 * @return averageVolumeUseSize
	**/
	public Long getAverageVolumeUseSize() {
		return averageVolumeUseSize;
	}

	public void setAverageVolumeUseSize(Long averageVolumeUseSize) {
		this.averageVolumeUseSize = averageVolumeUseSize;
	}

	public NasVolumeInstanceRating averageVolumeUseRatio(Float averageVolumeUseRatio) {
		this.averageVolumeUseRatio = averageVolumeUseRatio;
		return this;
	}

	 /**
	 * 평균볼륨사용비율
	 * @return averageVolumeUseRatio
	**/
	public Float getAverageVolumeUseRatio() {
		return averageVolumeUseRatio;
	}

	public void setAverageVolumeUseRatio(Float averageVolumeUseRatio) {
		this.averageVolumeUseRatio = averageVolumeUseRatio;
	}

	public NasVolumeInstanceRating maxVolumeUseSize(Long maxVolumeUseSize) {
		this.maxVolumeUseSize = maxVolumeUseSize;
		return this;
	}

	 /**
	 * 최대볼륨사용사이즈
	 * @return maxVolumeUseSize
	**/
	public Long getMaxVolumeUseSize() {
		return maxVolumeUseSize;
	}

	public void setMaxVolumeUseSize(Long maxVolumeUseSize) {
		this.maxVolumeUseSize = maxVolumeUseSize;
	}

	public NasVolumeInstanceRating maxVolumeUseRatio(Float maxVolumeUseRatio) {
		this.maxVolumeUseRatio = maxVolumeUseRatio;
		return this;
	}

	 /**
	 * 최대볼륨사용비율
	 * @return maxVolumeUseRatio
	**/
	public Float getMaxVolumeUseRatio() {
		return maxVolumeUseRatio;
	}

	public void setMaxVolumeUseRatio(Float maxVolumeUseRatio) {
		this.maxVolumeUseRatio = maxVolumeUseRatio;
	}

	public NasVolumeInstanceRating minVolumeUseSize(Long minVolumeUseSize) {
		this.minVolumeUseSize = minVolumeUseSize;
		return this;
	}

	 /**
	 * 최소볼륨사용사이즈
	 * @return minVolumeUseSize
	**/
	public Long getMinVolumeUseSize() {
		return minVolumeUseSize;
	}

	public void setMinVolumeUseSize(Long minVolumeUseSize) {
		this.minVolumeUseSize = minVolumeUseSize;
	}

	public NasVolumeInstanceRating minVolumeUseRatio(Float minVolumeUseRatio) {
		this.minVolumeUseRatio = minVolumeUseRatio;
		return this;
	}

	 /**
	 * 최소볼륨사용비율
	 * @return minVolumeUseRatio
	**/
	public Float getMinVolumeUseRatio() {
		return minVolumeUseRatio;
	}

	public void setMinVolumeUseRatio(Float minVolumeUseRatio) {
		this.minVolumeUseRatio = minVolumeUseRatio;
	}

	public NasVolumeInstanceRating snapshotVolumeSize(Long snapshotVolumeSize) {
		this.snapshotVolumeSize = snapshotVolumeSize;
		return this;
	}

	 /**
	 * 스냅샷볼륨사이즈
	 * @return snapshotVolumeSize
	**/
	public Long getSnapshotVolumeSize() {
		return snapshotVolumeSize;
	}

	public void setSnapshotVolumeSize(Long snapshotVolumeSize) {
		this.snapshotVolumeSize = snapshotVolumeSize;
	}

	public NasVolumeInstanceRating snapshotVolumeUseSize(Long snapshotVolumeUseSize) {
		this.snapshotVolumeUseSize = snapshotVolumeUseSize;
		return this;
	}

	 /**
	 * 스냅샷볼륨사용사이즈
	 * @return snapshotVolumeUseSize
	**/
	public Long getSnapshotVolumeUseSize() {
		return snapshotVolumeUseSize;
	}

	public void setSnapshotVolumeUseSize(Long snapshotVolumeUseSize) {
		this.snapshotVolumeUseSize = snapshotVolumeUseSize;
	}

	public NasVolumeInstanceRating snapshotVolumeUseRatio(Float snapshotVolumeUseRatio) {
		this.snapshotVolumeUseRatio = snapshotVolumeUseRatio;
		return this;
	}

	 /**
	 * 스냅샷볼륨사용비율
	 * @return snapshotVolumeUseRatio
	**/
	public Float getSnapshotVolumeUseRatio() {
		return snapshotVolumeUseRatio;
	}

	public void setSnapshotVolumeUseRatio(Float snapshotVolumeUseRatio) {
		this.snapshotVolumeUseRatio = snapshotVolumeUseRatio;
	}

	public NasVolumeInstanceRating snapshotAverageVolumeSize(Long snapshotAverageVolumeSize) {
		this.snapshotAverageVolumeSize = snapshotAverageVolumeSize;
		return this;
	}

	 /**
	 * 평균스냅샷볼륨사이즈
	 * @return snapshotAverageVolumeSize
	**/
	public Long getSnapshotAverageVolumeSize() {
		return snapshotAverageVolumeSize;
	}

	public void setSnapshotAverageVolumeSize(Long snapshotAverageVolumeSize) {
		this.snapshotAverageVolumeSize = snapshotAverageVolumeSize;
	}

	public NasVolumeInstanceRating snapshotAverageVolumeUseSize(Long snapshotAverageVolumeUseSize) {
		this.snapshotAverageVolumeUseSize = snapshotAverageVolumeUseSize;
		return this;
	}

	 /**
	 * 평균스냅샷볼륨사용사이즈
	 * @return snapshotAverageVolumeUseSize
	**/
	public Long getSnapshotAverageVolumeUseSize() {
		return snapshotAverageVolumeUseSize;
	}

	public void setSnapshotAverageVolumeUseSize(Long snapshotAverageVolumeUseSize) {
		this.snapshotAverageVolumeUseSize = snapshotAverageVolumeUseSize;
	}

	public NasVolumeInstanceRating snapshotAverageVolumeUseRatio(Float snapshotAverageVolumeUseRatio) {
		this.snapshotAverageVolumeUseRatio = snapshotAverageVolumeUseRatio;
		return this;
	}

	 /**
	 * 평균스냅샷볼륨사용비율
	 * @return snapshotAverageVolumeUseRatio
	**/
	public Float getSnapshotAverageVolumeUseRatio() {
		return snapshotAverageVolumeUseRatio;
	}

	public void setSnapshotAverageVolumeUseRatio(Float snapshotAverageVolumeUseRatio) {
		this.snapshotAverageVolumeUseRatio = snapshotAverageVolumeUseRatio;
	}

	public NasVolumeInstanceRating snapshotMaxVolumeUseSize(Long snapshotMaxVolumeUseSize) {
		this.snapshotMaxVolumeUseSize = snapshotMaxVolumeUseSize;
		return this;
	}

	 /**
	 * 최대스냅샷볼륨사용사이즈
	 * @return snapshotMaxVolumeUseSize
	**/
	public Long getSnapshotMaxVolumeUseSize() {
		return snapshotMaxVolumeUseSize;
	}

	public void setSnapshotMaxVolumeUseSize(Long snapshotMaxVolumeUseSize) {
		this.snapshotMaxVolumeUseSize = snapshotMaxVolumeUseSize;
	}

	public NasVolumeInstanceRating snapshotMaxVolumeUseRatio(Float snapshotMaxVolumeUseRatio) {
		this.snapshotMaxVolumeUseRatio = snapshotMaxVolumeUseRatio;
		return this;
	}

	 /**
	 * 최대스냅샷볼륨사용비율
	 * @return snapshotMaxVolumeUseRatio
	**/
	public Float getSnapshotMaxVolumeUseRatio() {
		return snapshotMaxVolumeUseRatio;
	}

	public void setSnapshotMaxVolumeUseRatio(Float snapshotMaxVolumeUseRatio) {
		this.snapshotMaxVolumeUseRatio = snapshotMaxVolumeUseRatio;
	}

	public NasVolumeInstanceRating snapshotMinVolumeUseSize(Long snapshotMinVolumeUseSize) {
		this.snapshotMinVolumeUseSize = snapshotMinVolumeUseSize;
		return this;
	}

	 /**
	 * 최소스냅샷볼륨사용사이즈
	 * @return snapshotMinVolumeUseSize
	**/
	public Long getSnapshotMinVolumeUseSize() {
		return snapshotMinVolumeUseSize;
	}

	public void setSnapshotMinVolumeUseSize(Long snapshotMinVolumeUseSize) {
		this.snapshotMinVolumeUseSize = snapshotMinVolumeUseSize;
	}

	public NasVolumeInstanceRating snapshotMinVolumeUseRatio(Float snapshotMinVolumeUseRatio) {
		this.snapshotMinVolumeUseRatio = snapshotMinVolumeUseRatio;
		return this;
	}

	 /**
	 * 최소스냅샷볼륨사용비율
	 * @return snapshotMinVolumeUseRatio
	**/
	public Float getSnapshotMinVolumeUseRatio() {
		return snapshotMinVolumeUseRatio;
	}

	public void setSnapshotMinVolumeUseRatio(Float snapshotMinVolumeUseRatio) {
		this.snapshotMinVolumeUseRatio = snapshotMinVolumeUseRatio;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		NasVolumeInstanceRating nasVolumeInstanceRating = (NasVolumeInstanceRating) o;
		return Objects.equals(this.ratingTime, nasVolumeInstanceRating.ratingTime) &&
				Objects.equals(this.volumeSize, nasVolumeInstanceRating.volumeSize) &&
				Objects.equals(this.volumeUseSize, nasVolumeInstanceRating.volumeUseSize) &&
				Objects.equals(this.volumeUseRatio, nasVolumeInstanceRating.volumeUseRatio) &&
				Objects.equals(this.averageVolumeSize, nasVolumeInstanceRating.averageVolumeSize) &&
				Objects.equals(this.averageVolumeUseSize, nasVolumeInstanceRating.averageVolumeUseSize) &&
				Objects.equals(this.averageVolumeUseRatio, nasVolumeInstanceRating.averageVolumeUseRatio) &&
				Objects.equals(this.maxVolumeUseSize, nasVolumeInstanceRating.maxVolumeUseSize) &&
				Objects.equals(this.maxVolumeUseRatio, nasVolumeInstanceRating.maxVolumeUseRatio) &&
				Objects.equals(this.minVolumeUseSize, nasVolumeInstanceRating.minVolumeUseSize) &&
				Objects.equals(this.minVolumeUseRatio, nasVolumeInstanceRating.minVolumeUseRatio) &&
				Objects.equals(this.snapshotVolumeSize, nasVolumeInstanceRating.snapshotVolumeSize) &&
				Objects.equals(this.snapshotVolumeUseSize, nasVolumeInstanceRating.snapshotVolumeUseSize) &&
				Objects.equals(this.snapshotVolumeUseRatio, nasVolumeInstanceRating.snapshotVolumeUseRatio) &&
				Objects.equals(this.snapshotAverageVolumeSize, nasVolumeInstanceRating.snapshotAverageVolumeSize) &&
				Objects.equals(this.snapshotAverageVolumeUseSize, nasVolumeInstanceRating.snapshotAverageVolumeUseSize) &&
				Objects.equals(this.snapshotAverageVolumeUseRatio, nasVolumeInstanceRating.snapshotAverageVolumeUseRatio) &&
				Objects.equals(this.snapshotMaxVolumeUseSize, nasVolumeInstanceRating.snapshotMaxVolumeUseSize) &&
				Objects.equals(this.snapshotMaxVolumeUseRatio, nasVolumeInstanceRating.snapshotMaxVolumeUseRatio) &&
				Objects.equals(this.snapshotMinVolumeUseSize, nasVolumeInstanceRating.snapshotMinVolumeUseSize) &&
				Objects.equals(this.snapshotMinVolumeUseRatio, nasVolumeInstanceRating.snapshotMinVolumeUseRatio);
	}

	@Override
	public int hashCode() {
		return Objects.hash(ratingTime, volumeSize, volumeUseSize, volumeUseRatio, averageVolumeSize, averageVolumeUseSize, averageVolumeUseRatio, maxVolumeUseSize, maxVolumeUseRatio, minVolumeUseSize, minVolumeUseRatio, snapshotVolumeSize, snapshotVolumeUseSize, snapshotVolumeUseRatio, snapshotAverageVolumeSize, snapshotAverageVolumeUseSize, snapshotAverageVolumeUseRatio, snapshotMaxVolumeUseSize, snapshotMaxVolumeUseRatio, snapshotMinVolumeUseSize, snapshotMinVolumeUseRatio);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class NasVolumeInstanceRating {\n");
		
		sb.append("		ratingTime: ").append(toIndentedString(ratingTime)).append("\n");
		sb.append("		volumeSize: ").append(toIndentedString(volumeSize)).append("\n");
		sb.append("		volumeUseSize: ").append(toIndentedString(volumeUseSize)).append("\n");
		sb.append("		volumeUseRatio: ").append(toIndentedString(volumeUseRatio)).append("\n");
		sb.append("		averageVolumeSize: ").append(toIndentedString(averageVolumeSize)).append("\n");
		sb.append("		averageVolumeUseSize: ").append(toIndentedString(averageVolumeUseSize)).append("\n");
		sb.append("		averageVolumeUseRatio: ").append(toIndentedString(averageVolumeUseRatio)).append("\n");
		sb.append("		maxVolumeUseSize: ").append(toIndentedString(maxVolumeUseSize)).append("\n");
		sb.append("		maxVolumeUseRatio: ").append(toIndentedString(maxVolumeUseRatio)).append("\n");
		sb.append("		minVolumeUseSize: ").append(toIndentedString(minVolumeUseSize)).append("\n");
		sb.append("		minVolumeUseRatio: ").append(toIndentedString(minVolumeUseRatio)).append("\n");
		sb.append("		snapshotVolumeSize: ").append(toIndentedString(snapshotVolumeSize)).append("\n");
		sb.append("		snapshotVolumeUseSize: ").append(toIndentedString(snapshotVolumeUseSize)).append("\n");
		sb.append("		snapshotVolumeUseRatio: ").append(toIndentedString(snapshotVolumeUseRatio)).append("\n");
		sb.append("		snapshotAverageVolumeSize: ").append(toIndentedString(snapshotAverageVolumeSize)).append("\n");
		sb.append("		snapshotAverageVolumeUseSize: ").append(toIndentedString(snapshotAverageVolumeUseSize)).append("\n");
		sb.append("		snapshotAverageVolumeUseRatio: ").append(toIndentedString(snapshotAverageVolumeUseRatio)).append("\n");
		sb.append("		snapshotMaxVolumeUseSize: ").append(toIndentedString(snapshotMaxVolumeUseSize)).append("\n");
		sb.append("		snapshotMaxVolumeUseRatio: ").append(toIndentedString(snapshotMaxVolumeUseRatio)).append("\n");
		sb.append("		snapshotMinVolumeUseSize: ").append(toIndentedString(snapshotMinVolumeUseSize)).append("\n");
		sb.append("		snapshotMinVolumeUseRatio: ").append(toIndentedString(snapshotMinVolumeUseRatio)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

