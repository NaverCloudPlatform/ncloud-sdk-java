/*
 * clouddb
 * Cloud DB<br/>https://ncloud.apigw.ntruss.com/clouddb/v2
 *
 * NBP corp.
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.clouddb.model;

import java.util.Objects;

/**
 * CloudDBConfig
 */
public class CloudDBConfig {
	private String configName = null;

	private String configValue = null;

	public CloudDBConfig configName(String configName) {
		this.configName = configName;
		return this;
	}

	 /**
	 * 설정명
	 * @return configName
	**/
	public String getConfigName() {
		return configName;
	}

	public void setConfigName(String configName) {
		this.configName = configName;
	}

	public CloudDBConfig configValue(String configValue) {
		this.configValue = configValue;
		return this;
	}

	 /**
	 * 설정값
	 * @return configValue
	**/
	public String getConfigValue() {
		return configValue;
	}

	public void setConfigValue(String configValue) {
		this.configValue = configValue;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		CloudDBConfig cloudDBConfig = (CloudDBConfig) o;
		return Objects.equals(this.configName, cloudDBConfig.configName) &&
				Objects.equals(this.configValue, cloudDBConfig.configValue);
	}

	@Override
	public int hashCode() {
		return Objects.hash(configName, configValue);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class CloudDBConfig {\n");
		
		sb.append("		configName: ").append(toIndentedString(configName)).append("\n");
		sb.append("		configValue: ").append(toIndentedString(configValue)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

