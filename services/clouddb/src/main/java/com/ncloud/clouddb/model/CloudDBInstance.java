/*
 * clouddb
 * Cloud DB<br/>https://ncloud.apigw.ntruss.com/clouddb/v2
 *
 * OpenAPI spec version: 2018-11-13T06:30:03Z
 *
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.clouddb.model;

import java.util.Objects;
import com.ncloud.clouddb.model.AccessControlGroup;
import com.ncloud.clouddb.model.CloudDBConfig;
import com.ncloud.clouddb.model.CloudDBConfigGroup;
import com.ncloud.clouddb.model.CloudDBServerInstance;
import com.ncloud.clouddb.model.CommonCode;
import com.ncloud.clouddb.model.Region;
import com.ncloud.clouddb.model.Zone;
import java.util.ArrayList;
import java.util.List;

/**
 * CloudDBInstance
 */
public class CloudDBInstance {
	private String cloudDBInstanceNo = null;

	private String cloudDBServiceName = null;

	private String dbKindCode = null;

	private String engineVersion = null;

	private Integer cpuCount = null;

	private Long memorySize = null;

	private CommonCode dataStorageType = null;

	private String licenseCode = null;

	private Integer cloudDBPort = null;

	private Boolean isHa = null;

	private String backupTime = null;

	private Integer backupFileRetentionPeriod = null;

	private String cloudDBInstanceStatusName = null;

	private String collation = null;

	private String rebootScheduleTime = null;

	private String createDate = null;

	private String cloudDBImageProductCode = null;

	private String cloudDBProductCode = null;

	private Boolean isCloudDBConfigNeedReboot = null;

	private Boolean isCloudDBNeedReboot = null;

	private Zone zone = null;

	private Region region = null;

	private List<CloudDBConfig> cloudDBConfigList = null;

	private List<CloudDBConfigGroup> cloudDBConfigGroupList = null;

	private List<AccessControlGroup> accessControlGroupList = null;

	private List<CloudDBServerInstance> cloudDBServerInstanceList = null;

	public CloudDBInstance cloudDBInstanceNo(String cloudDBInstanceNo) {
		this.cloudDBInstanceNo = cloudDBInstanceNo;
		return this;
	}

	 /**
	 * CloudDB인스턴스번호
	 * @return cloudDBInstanceNo
	**/
	public String getCloudDBInstanceNo() {
		return cloudDBInstanceNo;
	}

	public void setCloudDBInstanceNo(String cloudDBInstanceNo) {
		this.cloudDBInstanceNo = cloudDBInstanceNo;
	}

	public CloudDBInstance cloudDBServiceName(String cloudDBServiceName) {
		this.cloudDBServiceName = cloudDBServiceName;
		return this;
	}

	 /**
	 * CloudDB서비스이름
	 * @return cloudDBServiceName
	**/
	public String getCloudDBServiceName() {
		return cloudDBServiceName;
	}

	public void setCloudDBServiceName(String cloudDBServiceName) {
		this.cloudDBServiceName = cloudDBServiceName;
	}

	public CloudDBInstance dbKindCode(String dbKindCode) {
		this.dbKindCode = dbKindCode;
		return this;
	}

	 /**
	 * DB유형코드
	 * @return dbKindCode
	**/
	public String getDbKindCode() {
		return dbKindCode;
	}

	public void setDbKindCode(String dbKindCode) {
		this.dbKindCode = dbKindCode;
	}

	public CloudDBInstance engineVersion(String engineVersion) {
		this.engineVersion = engineVersion;
		return this;
	}

	 /**
	 * 엔진버전
	 * @return engineVersion
	**/
	public String getEngineVersion() {
		return engineVersion;
	}

	public void setEngineVersion(String engineVersion) {
		this.engineVersion = engineVersion;
	}

	public CloudDBInstance cpuCount(Integer cpuCount) {
		this.cpuCount = cpuCount;
		return this;
	}

	 /**
	 * CPU개수
	 * @return cpuCount
	**/
	public Integer getCpuCount() {
		return cpuCount;
	}

	public void setCpuCount(Integer cpuCount) {
		this.cpuCount = cpuCount;
	}

	public CloudDBInstance memorySize(Long memorySize) {
		this.memorySize = memorySize;
		return this;
	}

	 /**
	 * 메모리사이즈
	 * @return memorySize
	**/
	public Long getMemorySize() {
		return memorySize;
	}

	public void setMemorySize(Long memorySize) {
		this.memorySize = memorySize;
	}

	public CloudDBInstance dataStorageType(CommonCode dataStorageType) {
		this.dataStorageType = dataStorageType;
		return this;
	}

	 /**
	 * 데이터스토리지타입
	 * @return dataStorageType
	**/
	public CommonCode getDataStorageType() {
		return dataStorageType;
	}

	public void setDataStorageType(CommonCode dataStorageType) {
		this.dataStorageType = dataStorageType;
	}

	public CloudDBInstance licenseCode(String licenseCode) {
		this.licenseCode = licenseCode;
		return this;
	}

	 /**
	 * 라이센스코드
	 * @return licenseCode
	**/
	public String getLicenseCode() {
		return licenseCode;
	}

	public void setLicenseCode(String licenseCode) {
		this.licenseCode = licenseCode;
	}

	public CloudDBInstance cloudDBPort(Integer cloudDBPort) {
		this.cloudDBPort = cloudDBPort;
		return this;
	}

	 /**
	 * CloudDB포트
	 * @return cloudDBPort
	**/
	public Integer getCloudDBPort() {
		return cloudDBPort;
	}

	public void setCloudDBPort(Integer cloudDBPort) {
		this.cloudDBPort = cloudDBPort;
	}

	public CloudDBInstance isHa(Boolean isHa) {
		this.isHa = isHa;
		return this;
	}

	 /**
	 * HA여부
	 * @return isHa
	**/
	public Boolean isIsHa() {
		return isHa;
	}

	public void setIsHa(Boolean isHa) {
		this.isHa = isHa;
	}

	public CloudDBInstance backupTime(String backupTime) {
		this.backupTime = backupTime;
		return this;
	}

	 /**
	 * 백업시간
	 * @return backupTime
	**/
	public String getBackupTime() {
		return backupTime;
	}

	public void setBackupTime(String backupTime) {
		this.backupTime = backupTime;
	}

	public CloudDBInstance backupFileRetentionPeriod(Integer backupFileRetentionPeriod) {
		this.backupFileRetentionPeriod = backupFileRetentionPeriod;
		return this;
	}

	 /**
	 * 백업파일유지기간
	 * @return backupFileRetentionPeriod
	**/
	public Integer getBackupFileRetentionPeriod() {
		return backupFileRetentionPeriod;
	}

	public void setBackupFileRetentionPeriod(Integer backupFileRetentionPeriod) {
		this.backupFileRetentionPeriod = backupFileRetentionPeriod;
	}

	public CloudDBInstance cloudDBInstanceStatusName(String cloudDBInstanceStatusName) {
		this.cloudDBInstanceStatusName = cloudDBInstanceStatusName;
		return this;
	}

	 /**
	 * CloudDB인스턴스상태이름
	 * @return cloudDBInstanceStatusName
	**/
	public String getCloudDBInstanceStatusName() {
		return cloudDBInstanceStatusName;
	}

	public void setCloudDBInstanceStatusName(String cloudDBInstanceStatusName) {
		this.cloudDBInstanceStatusName = cloudDBInstanceStatusName;
	}

	public CloudDBInstance collation(String collation) {
		this.collation = collation;
		return this;
	}

	 /**
	 * Collation
	 * @return collation
	**/
	public String getCollation() {
		return collation;
	}

	public void setCollation(String collation) {
		this.collation = collation;
	}

	public CloudDBInstance rebootScheduleTime(String rebootScheduleTime) {
		this.rebootScheduleTime = rebootScheduleTime;
		return this;
	}

	 /**
	 * 재부팅예약시간
	 * @return rebootScheduleTime
	**/
	public String getRebootScheduleTime() {
		return rebootScheduleTime;
	}

	public void setRebootScheduleTime(String rebootScheduleTime) {
		this.rebootScheduleTime = rebootScheduleTime;
	}

	public CloudDBInstance createDate(String createDate) {
		this.createDate = createDate;
		return this;
	}

	 /**
	 * 생성일시
	 * @return createDate
	**/
	public String getCreateDate() {
		return createDate;
	}

	public void setCreateDate(String createDate) {
		this.createDate = createDate;
	}

	public CloudDBInstance cloudDBImageProductCode(String cloudDBImageProductCode) {
		this.cloudDBImageProductCode = cloudDBImageProductCode;
		return this;
	}

	 /**
	 * CloudDB이미지상품코드
	 * @return cloudDBImageProductCode
	**/
	public String getCloudDBImageProductCode() {
		return cloudDBImageProductCode;
	}

	public void setCloudDBImageProductCode(String cloudDBImageProductCode) {
		this.cloudDBImageProductCode = cloudDBImageProductCode;
	}

	public CloudDBInstance cloudDBProductCode(String cloudDBProductCode) {
		this.cloudDBProductCode = cloudDBProductCode;
		return this;
	}

	 /**
	 * CloudDB상품코드
	 * @return cloudDBProductCode
	**/
	public String getCloudDBProductCode() {
		return cloudDBProductCode;
	}

	public void setCloudDBProductCode(String cloudDBProductCode) {
		this.cloudDBProductCode = cloudDBProductCode;
	}

	public CloudDBInstance isCloudDBConfigNeedReboot(Boolean isCloudDBConfigNeedReboot) {
		this.isCloudDBConfigNeedReboot = isCloudDBConfigNeedReboot;
		return this;
	}

	 /**
	 * CloudDB설정재부팅필요여부
	 * @return isCloudDBConfigNeedReboot
	**/
	public Boolean isIsCloudDBConfigNeedReboot() {
		return isCloudDBConfigNeedReboot;
	}

	public void setIsCloudDBConfigNeedReboot(Boolean isCloudDBConfigNeedReboot) {
		this.isCloudDBConfigNeedReboot = isCloudDBConfigNeedReboot;
	}

	public CloudDBInstance isCloudDBNeedReboot(Boolean isCloudDBNeedReboot) {
		this.isCloudDBNeedReboot = isCloudDBNeedReboot;
		return this;
	}

	 /**
	 * CloudDB재부팅필요여부
	 * @return isCloudDBNeedReboot
	**/
	public Boolean isIsCloudDBNeedReboot() {
		return isCloudDBNeedReboot;
	}

	public void setIsCloudDBNeedReboot(Boolean isCloudDBNeedReboot) {
		this.isCloudDBNeedReboot = isCloudDBNeedReboot;
	}

	public CloudDBInstance zone(Zone zone) {
		this.zone = zone;
		return this;
	}

	 /**
	 * Zone
	 * @return zone
	**/
	public Zone getZone() {
		return zone;
	}

	public void setZone(Zone zone) {
		this.zone = zone;
	}

	public CloudDBInstance region(Region region) {
		this.region = region;
		return this;
	}

	 /**
	 * 리전
	 * @return region
	**/
	public Region getRegion() {
		return region;
	}

	public void setRegion(Region region) {
		this.region = region;
	}

	public CloudDBInstance cloudDBConfigList(List<CloudDBConfig> cloudDBConfigList) {
		this.cloudDBConfigList = cloudDBConfigList;
		return this;
	}

	public CloudDBInstance addCloudDBConfigListItem(CloudDBConfig cloudDBConfigListItem) {
		if (this.cloudDBConfigList == null) {
			this.cloudDBConfigList = new ArrayList<CloudDBConfig>();
		}
		this.cloudDBConfigList.add(cloudDBConfigListItem);
		return this;
	}

	 /**
	 * Get cloudDBConfigList
	 * @return cloudDBConfigList
	**/
	public List<CloudDBConfig> getCloudDBConfigList() {
		return cloudDBConfigList;
	}

	public void setCloudDBConfigList(List<CloudDBConfig> cloudDBConfigList) {
		this.cloudDBConfigList = cloudDBConfigList;
	}

	public CloudDBInstance cloudDBConfigGroupList(List<CloudDBConfigGroup> cloudDBConfigGroupList) {
		this.cloudDBConfigGroupList = cloudDBConfigGroupList;
		return this;
	}

	public CloudDBInstance addCloudDBConfigGroupListItem(CloudDBConfigGroup cloudDBConfigGroupListItem) {
		if (this.cloudDBConfigGroupList == null) {
			this.cloudDBConfigGroupList = new ArrayList<CloudDBConfigGroup>();
		}
		this.cloudDBConfigGroupList.add(cloudDBConfigGroupListItem);
		return this;
	}

	 /**
	 * Get cloudDBConfigGroupList
	 * @return cloudDBConfigGroupList
	**/
	public List<CloudDBConfigGroup> getCloudDBConfigGroupList() {
		return cloudDBConfigGroupList;
	}

	public void setCloudDBConfigGroupList(List<CloudDBConfigGroup> cloudDBConfigGroupList) {
		this.cloudDBConfigGroupList = cloudDBConfigGroupList;
	}

	public CloudDBInstance accessControlGroupList(List<AccessControlGroup> accessControlGroupList) {
		this.accessControlGroupList = accessControlGroupList;
		return this;
	}

	public CloudDBInstance addAccessControlGroupListItem(AccessControlGroup accessControlGroupListItem) {
		if (this.accessControlGroupList == null) {
			this.accessControlGroupList = new ArrayList<AccessControlGroup>();
		}
		this.accessControlGroupList.add(accessControlGroupListItem);
		return this;
	}

	 /**
	 * Get accessControlGroupList
	 * @return accessControlGroupList
	**/
	public List<AccessControlGroup> getAccessControlGroupList() {
		return accessControlGroupList;
	}

	public void setAccessControlGroupList(List<AccessControlGroup> accessControlGroupList) {
		this.accessControlGroupList = accessControlGroupList;
	}

	public CloudDBInstance cloudDBServerInstanceList(List<CloudDBServerInstance> cloudDBServerInstanceList) {
		this.cloudDBServerInstanceList = cloudDBServerInstanceList;
		return this;
	}

	public CloudDBInstance addCloudDBServerInstanceListItem(CloudDBServerInstance cloudDBServerInstanceListItem) {
		if (this.cloudDBServerInstanceList == null) {
			this.cloudDBServerInstanceList = new ArrayList<CloudDBServerInstance>();
		}
		this.cloudDBServerInstanceList.add(cloudDBServerInstanceListItem);
		return this;
	}

	 /**
	 * Get cloudDBServerInstanceList
	 * @return cloudDBServerInstanceList
	**/
	public List<CloudDBServerInstance> getCloudDBServerInstanceList() {
		return cloudDBServerInstanceList;
	}

	public void setCloudDBServerInstanceList(List<CloudDBServerInstance> cloudDBServerInstanceList) {
		this.cloudDBServerInstanceList = cloudDBServerInstanceList;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		CloudDBInstance cloudDBInstance = (CloudDBInstance) o;
		return Objects.equals(this.cloudDBInstanceNo, cloudDBInstance.cloudDBInstanceNo) &&
				Objects.equals(this.cloudDBServiceName, cloudDBInstance.cloudDBServiceName) &&
				Objects.equals(this.dbKindCode, cloudDBInstance.dbKindCode) &&
				Objects.equals(this.engineVersion, cloudDBInstance.engineVersion) &&
				Objects.equals(this.cpuCount, cloudDBInstance.cpuCount) &&
				Objects.equals(this.memorySize, cloudDBInstance.memorySize) &&
				Objects.equals(this.dataStorageType, cloudDBInstance.dataStorageType) &&
				Objects.equals(this.licenseCode, cloudDBInstance.licenseCode) &&
				Objects.equals(this.cloudDBPort, cloudDBInstance.cloudDBPort) &&
				Objects.equals(this.isHa, cloudDBInstance.isHa) &&
				Objects.equals(this.backupTime, cloudDBInstance.backupTime) &&
				Objects.equals(this.backupFileRetentionPeriod, cloudDBInstance.backupFileRetentionPeriod) &&
				Objects.equals(this.cloudDBInstanceStatusName, cloudDBInstance.cloudDBInstanceStatusName) &&
				Objects.equals(this.collation, cloudDBInstance.collation) &&
				Objects.equals(this.rebootScheduleTime, cloudDBInstance.rebootScheduleTime) &&
				Objects.equals(this.createDate, cloudDBInstance.createDate) &&
				Objects.equals(this.cloudDBImageProductCode, cloudDBInstance.cloudDBImageProductCode) &&
				Objects.equals(this.cloudDBProductCode, cloudDBInstance.cloudDBProductCode) &&
				Objects.equals(this.isCloudDBConfigNeedReboot, cloudDBInstance.isCloudDBConfigNeedReboot) &&
				Objects.equals(this.isCloudDBNeedReboot, cloudDBInstance.isCloudDBNeedReboot) &&
				Objects.equals(this.zone, cloudDBInstance.zone) &&
				Objects.equals(this.region, cloudDBInstance.region) &&
				Objects.equals(this.cloudDBConfigList, cloudDBInstance.cloudDBConfigList) &&
				Objects.equals(this.cloudDBConfigGroupList, cloudDBInstance.cloudDBConfigGroupList) &&
				Objects.equals(this.accessControlGroupList, cloudDBInstance.accessControlGroupList) &&
				Objects.equals(this.cloudDBServerInstanceList, cloudDBInstance.cloudDBServerInstanceList);
	}

	@Override
	public int hashCode() {
		return Objects.hash(cloudDBInstanceNo, cloudDBServiceName, dbKindCode, engineVersion, cpuCount, memorySize, dataStorageType, licenseCode, cloudDBPort, isHa, backupTime, backupFileRetentionPeriod, cloudDBInstanceStatusName, collation, rebootScheduleTime, createDate, cloudDBImageProductCode, cloudDBProductCode, isCloudDBConfigNeedReboot, isCloudDBNeedReboot, zone, region, cloudDBConfigList, cloudDBConfigGroupList, accessControlGroupList, cloudDBServerInstanceList);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class CloudDBInstance {\n");
		
		sb.append("		cloudDBInstanceNo: ").append(toIndentedString(cloudDBInstanceNo)).append("\n");
		sb.append("		cloudDBServiceName: ").append(toIndentedString(cloudDBServiceName)).append("\n");
		sb.append("		dbKindCode: ").append(toIndentedString(dbKindCode)).append("\n");
		sb.append("		engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
		sb.append("		cpuCount: ").append(toIndentedString(cpuCount)).append("\n");
		sb.append("		memorySize: ").append(toIndentedString(memorySize)).append("\n");
		sb.append("		dataStorageType: ").append(toIndentedString(dataStorageType)).append("\n");
		sb.append("		licenseCode: ").append(toIndentedString(licenseCode)).append("\n");
		sb.append("		cloudDBPort: ").append(toIndentedString(cloudDBPort)).append("\n");
		sb.append("		isHa: ").append(toIndentedString(isHa)).append("\n");
		sb.append("		backupTime: ").append(toIndentedString(backupTime)).append("\n");
		sb.append("		backupFileRetentionPeriod: ").append(toIndentedString(backupFileRetentionPeriod)).append("\n");
		sb.append("		cloudDBInstanceStatusName: ").append(toIndentedString(cloudDBInstanceStatusName)).append("\n");
		sb.append("		collation: ").append(toIndentedString(collation)).append("\n");
		sb.append("		rebootScheduleTime: ").append(toIndentedString(rebootScheduleTime)).append("\n");
		sb.append("		createDate: ").append(toIndentedString(createDate)).append("\n");
		sb.append("		cloudDBImageProductCode: ").append(toIndentedString(cloudDBImageProductCode)).append("\n");
		sb.append("		cloudDBProductCode: ").append(toIndentedString(cloudDBProductCode)).append("\n");
		sb.append("		isCloudDBConfigNeedReboot: ").append(toIndentedString(isCloudDBConfigNeedReboot)).append("\n");
		sb.append("		isCloudDBNeedReboot: ").append(toIndentedString(isCloudDBNeedReboot)).append("\n");
		sb.append("		zone: ").append(toIndentedString(zone)).append("\n");
		sb.append("		region: ").append(toIndentedString(region)).append("\n");
		sb.append("		cloudDBConfigList: ").append(toIndentedString(cloudDBConfigList)).append("\n");
		sb.append("		cloudDBConfigGroupList: ").append(toIndentedString(cloudDBConfigGroupList)).append("\n");
		sb.append("		accessControlGroupList: ").append(toIndentedString(accessControlGroupList)).append("\n");
		sb.append("		cloudDBServerInstanceList: ").append(toIndentedString(cloudDBServerInstanceList)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

