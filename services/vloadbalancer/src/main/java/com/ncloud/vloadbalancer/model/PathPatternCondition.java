/*
 * vloadbalancer
 * VPC Load Balancer 관련 API<br/>https://ncloud.apigw.ntruss.com/vloadbalancer/v2
 *
 * NBP corp.
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.vloadbalancer.model;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;

/**
 * PathPatternCondition
 */
public class PathPatternCondition {
	private List<String> pathPatternList = null;

	public PathPatternCondition pathPatternList(List<String> pathPatternList) {
		this.pathPatternList = pathPatternList;
		return this;
	}

	public PathPatternCondition addPathPatternListItem(String pathPatternListItem) {
		if (this.pathPatternList == null) {
			this.pathPatternList = new ArrayList<String>();
		}
		this.pathPatternList.add(pathPatternListItem);
		return this;
	}

	 /**
	 * 경로패턴리스트
	 * @return pathPatternList
	**/
	public List<String> getPathPatternList() {
		return pathPatternList;
	}

	public void setPathPatternList(List<String> pathPatternList) {
		this.pathPatternList = pathPatternList;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		PathPatternCondition pathPatternCondition = (PathPatternCondition) o;
		return Objects.equals(this.pathPatternList, pathPatternCondition.pathPatternList);
	}

	@Override
	public int hashCode() {
		return Objects.hash(pathPatternList);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class PathPatternCondition {\n");
		
		sb.append("		pathPatternList: ").append(toIndentedString(pathPatternList)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

