/*
 * vserver
 * VPC Compute 관련 API<br/>https://ncloud.apigw.ntruss.com/vserver/v2
 *
 * OpenAPI spec version: 2020-09-17T02:28:03Z
 *
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.vserver.model;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateNetworkInterfaceRequest
 */
public class CreateNetworkInterfaceRequest {
	private String regionCode = null;

	private List<String> accessControlGroupNoList = new ArrayList<String>();

	private String networkInterfaceDescription = null;

	private String networkInterfaceName = null;

	private String subnetNo = null;

	private String vpcNo = null;

	private String serverInstanceNo = null;

	private String ip = null;

	private String responseFormatType = null;

	public CreateNetworkInterfaceRequest regionCode(String regionCode) {
		this.regionCode = regionCode;
		return this;
	}

	 /**
	 * REGION코드
	 * @return regionCode
	**/
	public String getRegionCode() {
		return regionCode;
	}

	public void setRegionCode(String regionCode) {
		this.regionCode = regionCode;
	}

	public CreateNetworkInterfaceRequest accessControlGroupNoList(List<String> accessControlGroupNoList) {
		this.accessControlGroupNoList = accessControlGroupNoList;
		return this;
	}

	public CreateNetworkInterfaceRequest addAccessControlGroupNoListItem(String accessControlGroupNoListItem) {
		this.accessControlGroupNoList.add(accessControlGroupNoListItem);
		return this;
	}

	 /**
	 * ACG번호리스트
	 * @return accessControlGroupNoList
	**/
	public List<String> getAccessControlGroupNoList() {
		return accessControlGroupNoList;
	}

	public void setAccessControlGroupNoList(List<String> accessControlGroupNoList) {
		this.accessControlGroupNoList = accessControlGroupNoList;
	}

	public CreateNetworkInterfaceRequest networkInterfaceDescription(String networkInterfaceDescription) {
		this.networkInterfaceDescription = networkInterfaceDescription;
		return this;
	}

	 /**
	 * 네트워크인터페이스설명
	 * @return networkInterfaceDescription
	**/
	public String getNetworkInterfaceDescription() {
		return networkInterfaceDescription;
	}

	public void setNetworkInterfaceDescription(String networkInterfaceDescription) {
		this.networkInterfaceDescription = networkInterfaceDescription;
	}

	public CreateNetworkInterfaceRequest networkInterfaceName(String networkInterfaceName) {
		this.networkInterfaceName = networkInterfaceName;
		return this;
	}

	 /**
	 * 네트워크인터페이스이름
	 * @return networkInterfaceName
	**/
	public String getNetworkInterfaceName() {
		return networkInterfaceName;
	}

	public void setNetworkInterfaceName(String networkInterfaceName) {
		this.networkInterfaceName = networkInterfaceName;
	}

	public CreateNetworkInterfaceRequest subnetNo(String subnetNo) {
		this.subnetNo = subnetNo;
		return this;
	}

	 /**
	 * 서브넷번호
	 * @return subnetNo
	**/
	public String getSubnetNo() {
		return subnetNo;
	}

	public void setSubnetNo(String subnetNo) {
		this.subnetNo = subnetNo;
	}

	public CreateNetworkInterfaceRequest vpcNo(String vpcNo) {
		this.vpcNo = vpcNo;
		return this;
	}

	 /**
	 * VPC번호
	 * @return vpcNo
	**/
	public String getVpcNo() {
		return vpcNo;
	}

	public void setVpcNo(String vpcNo) {
		this.vpcNo = vpcNo;
	}

	public CreateNetworkInterfaceRequest serverInstanceNo(String serverInstanceNo) {
		this.serverInstanceNo = serverInstanceNo;
		return this;
	}

	 /**
	 * 서버인스턴스번호
	 * @return serverInstanceNo
	**/
	public String getServerInstanceNo() {
		return serverInstanceNo;
	}

	public void setServerInstanceNo(String serverInstanceNo) {
		this.serverInstanceNo = serverInstanceNo;
	}

	public CreateNetworkInterfaceRequest ip(String ip) {
		this.ip = ip;
		return this;
	}

	 /**
	 * IP주소
	 * @return ip
	**/
	public String getIp() {
		return ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	public CreateNetworkInterfaceRequest responseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
		return this;
	}

	 /**
	 * responseFormatType {json, xml}
	 * @return responseFormatType
	**/
	public String getResponseFormatType() {
		return responseFormatType;
	}

	public void setResponseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		CreateNetworkInterfaceRequest createNetworkInterfaceRequest = (CreateNetworkInterfaceRequest) o;
		return Objects.equals(this.regionCode, createNetworkInterfaceRequest.regionCode) &&
				Objects.equals(this.accessControlGroupNoList, createNetworkInterfaceRequest.accessControlGroupNoList) &&
				Objects.equals(this.networkInterfaceDescription, createNetworkInterfaceRequest.networkInterfaceDescription) &&
				Objects.equals(this.networkInterfaceName, createNetworkInterfaceRequest.networkInterfaceName) &&
				Objects.equals(this.subnetNo, createNetworkInterfaceRequest.subnetNo) &&
				Objects.equals(this.vpcNo, createNetworkInterfaceRequest.vpcNo) &&
				Objects.equals(this.serverInstanceNo, createNetworkInterfaceRequest.serverInstanceNo) &&
				Objects.equals(this.ip, createNetworkInterfaceRequest.ip) &&
				Objects.equals(this.responseFormatType, createNetworkInterfaceRequest.responseFormatType);
	}

	@Override
	public int hashCode() {
		return Objects.hash(regionCode, accessControlGroupNoList, networkInterfaceDescription, networkInterfaceName, subnetNo, vpcNo, serverInstanceNo, ip, responseFormatType);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class CreateNetworkInterfaceRequest {\n");
		
		sb.append("		regionCode: ").append(toIndentedString(regionCode)).append("\n");
		sb.append("		accessControlGroupNoList: ").append(toIndentedString(accessControlGroupNoList)).append("\n");
		sb.append("		networkInterfaceDescription: ").append(toIndentedString(networkInterfaceDescription)).append("\n");
		sb.append("		networkInterfaceName: ").append(toIndentedString(networkInterfaceName)).append("\n");
		sb.append("		subnetNo: ").append(toIndentedString(subnetNo)).append("\n");
		sb.append("		vpcNo: ").append(toIndentedString(vpcNo)).append("\n");
		sb.append("		serverInstanceNo: ").append(toIndentedString(serverInstanceNo)).append("\n");
		sb.append("		ip: ").append(toIndentedString(ip)).append("\n");
		sb.append("		responseFormatType: ").append(toIndentedString(responseFormatType)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

