/*
 * vserver
 * VPC Compute 관련 API<br/>https://ncloud.apigw.ntruss.com/vserver/v2
 *
 * OpenAPI spec version: 2020-11-18T09:44:20Z
 *
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.vserver.model;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;

/**
 * GetServerInstanceListRequest
 */
public class GetServerInstanceListRequest {
	private String regionCode = null;

	private List<String> serverInstanceNoList = null;

	private String vpcNo = null;

	private Integer pageNo = null;

	private Integer pageSize = null;

	private String serverInstanceStatusCode = null;

	private String baseBlockStorageDiskTypeCode = null;

	private String baseBlockStorageDiskDetailTypeCode = null;

	private String serverName = null;

	private String ip = null;

	private String sortedBy = null;

	private String sortingOrder = null;

	private List<String> placementGroupNoList = null;

	private String responseFormatType = null;

	public GetServerInstanceListRequest regionCode(String regionCode) {
		this.regionCode = regionCode;
		return this;
	}

	 /**
	 * REGION코드
	 * @return regionCode
	**/
	public String getRegionCode() {
		return regionCode;
	}

	public void setRegionCode(String regionCode) {
		this.regionCode = regionCode;
	}

	public GetServerInstanceListRequest serverInstanceNoList(List<String> serverInstanceNoList) {
		this.serverInstanceNoList = serverInstanceNoList;
		return this;
	}

	public GetServerInstanceListRequest addServerInstanceNoListItem(String serverInstanceNoListItem) {
		if (this.serverInstanceNoList == null) {
			this.serverInstanceNoList = new ArrayList<String>();
		}
		this.serverInstanceNoList.add(serverInstanceNoListItem);
		return this;
	}

	 /**
	 * 서버인스턴스번호리스트
	 * @return serverInstanceNoList
	**/
	public List<String> getServerInstanceNoList() {
		return serverInstanceNoList;
	}

	public void setServerInstanceNoList(List<String> serverInstanceNoList) {
		this.serverInstanceNoList = serverInstanceNoList;
	}

	public GetServerInstanceListRequest vpcNo(String vpcNo) {
		this.vpcNo = vpcNo;
		return this;
	}

	 /**
	 * VPC번호
	 * @return vpcNo
	**/
	public String getVpcNo() {
		return vpcNo;
	}

	public void setVpcNo(String vpcNo) {
		this.vpcNo = vpcNo;
	}

	public GetServerInstanceListRequest pageNo(Integer pageNo) {
		this.pageNo = pageNo;
		return this;
	}

	 /**
	 * 페이지번호
	 * @return pageNo
	**/
	public Integer getPageNo() {
		return pageNo;
	}

	public void setPageNo(Integer pageNo) {
		this.pageNo = pageNo;
	}

	public GetServerInstanceListRequest pageSize(Integer pageSize) {
		this.pageSize = pageSize;
		return this;
	}

	 /**
	 * 페이지사이즈
	 * @return pageSize
	**/
	public Integer getPageSize() {
		return pageSize;
	}

	public void setPageSize(Integer pageSize) {
		this.pageSize = pageSize;
	}

	public GetServerInstanceListRequest serverInstanceStatusCode(String serverInstanceStatusCode) {
		this.serverInstanceStatusCode = serverInstanceStatusCode;
		return this;
	}

	 /**
	 * 서버인스턴스상태코드
	 * @return serverInstanceStatusCode
	**/
	public String getServerInstanceStatusCode() {
		return serverInstanceStatusCode;
	}

	public void setServerInstanceStatusCode(String serverInstanceStatusCode) {
		this.serverInstanceStatusCode = serverInstanceStatusCode;
	}

	public GetServerInstanceListRequest baseBlockStorageDiskTypeCode(String baseBlockStorageDiskTypeCode) {
		this.baseBlockStorageDiskTypeCode = baseBlockStorageDiskTypeCode;
		return this;
	}

	 /**
	 * 기본블록스토리지디스크유형코드
	 * @return baseBlockStorageDiskTypeCode
	**/
	public String getBaseBlockStorageDiskTypeCode() {
		return baseBlockStorageDiskTypeCode;
	}

	public void setBaseBlockStorageDiskTypeCode(String baseBlockStorageDiskTypeCode) {
		this.baseBlockStorageDiskTypeCode = baseBlockStorageDiskTypeCode;
	}

	public GetServerInstanceListRequest baseBlockStorageDiskDetailTypeCode(String baseBlockStorageDiskDetailTypeCode) {
		this.baseBlockStorageDiskDetailTypeCode = baseBlockStorageDiskDetailTypeCode;
		return this;
	}

	 /**
	 * 기본블록스토리지디스크상세유형코드
	 * @return baseBlockStorageDiskDetailTypeCode
	**/
	public String getBaseBlockStorageDiskDetailTypeCode() {
		return baseBlockStorageDiskDetailTypeCode;
	}

	public void setBaseBlockStorageDiskDetailTypeCode(String baseBlockStorageDiskDetailTypeCode) {
		this.baseBlockStorageDiskDetailTypeCode = baseBlockStorageDiskDetailTypeCode;
	}

	public GetServerInstanceListRequest serverName(String serverName) {
		this.serverName = serverName;
		return this;
	}

	 /**
	 * 서버인스턴스이름
	 * @return serverName
	**/
	public String getServerName() {
		return serverName;
	}

	public void setServerName(String serverName) {
		this.serverName = serverName;
	}

	public GetServerInstanceListRequest ip(String ip) {
		this.ip = ip;
		return this;
	}

	 /**
	 * IP주소
	 * @return ip
	**/
	public String getIp() {
		return ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	public GetServerInstanceListRequest sortedBy(String sortedBy) {
		this.sortedBy = sortedBy;
		return this;
	}

	 /**
	 * 정렬대상
	 * @return sortedBy
	**/
	public String getSortedBy() {
		return sortedBy;
	}

	public void setSortedBy(String sortedBy) {
		this.sortedBy = sortedBy;
	}

	public GetServerInstanceListRequest sortingOrder(String sortingOrder) {
		this.sortingOrder = sortingOrder;
		return this;
	}

	 /**
	 * 정렬순서
	 * @return sortingOrder
	**/
	public String getSortingOrder() {
		return sortingOrder;
	}

	public void setSortingOrder(String sortingOrder) {
		this.sortingOrder = sortingOrder;
	}

	public GetServerInstanceListRequest placementGroupNoList(List<String> placementGroupNoList) {
		this.placementGroupNoList = placementGroupNoList;
		return this;
	}

	public GetServerInstanceListRequest addPlacementGroupNoListItem(String placementGroupNoListItem) {
		if (this.placementGroupNoList == null) {
			this.placementGroupNoList = new ArrayList<String>();
		}
		this.placementGroupNoList.add(placementGroupNoListItem);
		return this;
	}

	 /**
	 * 물리배치그룹번호리스트
	 * @return placementGroupNoList
	**/
	public List<String> getPlacementGroupNoList() {
		return placementGroupNoList;
	}

	public void setPlacementGroupNoList(List<String> placementGroupNoList) {
		this.placementGroupNoList = placementGroupNoList;
	}

	public GetServerInstanceListRequest responseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
		return this;
	}

	 /**
	 * responseFormatType {json, xml}
	 * @return responseFormatType
	**/
	public String getResponseFormatType() {
		return responseFormatType;
	}

	public void setResponseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		GetServerInstanceListRequest getServerInstanceListRequest = (GetServerInstanceListRequest) o;
		return Objects.equals(this.regionCode, getServerInstanceListRequest.regionCode) &&
				Objects.equals(this.serverInstanceNoList, getServerInstanceListRequest.serverInstanceNoList) &&
				Objects.equals(this.vpcNo, getServerInstanceListRequest.vpcNo) &&
				Objects.equals(this.pageNo, getServerInstanceListRequest.pageNo) &&
				Objects.equals(this.pageSize, getServerInstanceListRequest.pageSize) &&
				Objects.equals(this.serverInstanceStatusCode, getServerInstanceListRequest.serverInstanceStatusCode) &&
				Objects.equals(this.baseBlockStorageDiskTypeCode, getServerInstanceListRequest.baseBlockStorageDiskTypeCode) &&
				Objects.equals(this.baseBlockStorageDiskDetailTypeCode, getServerInstanceListRequest.baseBlockStorageDiskDetailTypeCode) &&
				Objects.equals(this.serverName, getServerInstanceListRequest.serverName) &&
				Objects.equals(this.ip, getServerInstanceListRequest.ip) &&
				Objects.equals(this.sortedBy, getServerInstanceListRequest.sortedBy) &&
				Objects.equals(this.sortingOrder, getServerInstanceListRequest.sortingOrder) &&
				Objects.equals(this.placementGroupNoList, getServerInstanceListRequest.placementGroupNoList) &&
				Objects.equals(this.responseFormatType, getServerInstanceListRequest.responseFormatType);
	}

	@Override
	public int hashCode() {
		return Objects.hash(regionCode, serverInstanceNoList, vpcNo, pageNo, pageSize, serverInstanceStatusCode, baseBlockStorageDiskTypeCode, baseBlockStorageDiskDetailTypeCode, serverName, ip, sortedBy, sortingOrder, placementGroupNoList, responseFormatType);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class GetServerInstanceListRequest {\n");
		
		sb.append("		regionCode: ").append(toIndentedString(regionCode)).append("\n");
		sb.append("		serverInstanceNoList: ").append(toIndentedString(serverInstanceNoList)).append("\n");
		sb.append("		vpcNo: ").append(toIndentedString(vpcNo)).append("\n");
		sb.append("		pageNo: ").append(toIndentedString(pageNo)).append("\n");
		sb.append("		pageSize: ").append(toIndentedString(pageSize)).append("\n");
		sb.append("		serverInstanceStatusCode: ").append(toIndentedString(serverInstanceStatusCode)).append("\n");
		sb.append("		baseBlockStorageDiskTypeCode: ").append(toIndentedString(baseBlockStorageDiskTypeCode)).append("\n");
		sb.append("		baseBlockStorageDiskDetailTypeCode: ").append(toIndentedString(baseBlockStorageDiskDetailTypeCode)).append("\n");
		sb.append("		serverName: ").append(toIndentedString(serverName)).append("\n");
		sb.append("		ip: ").append(toIndentedString(ip)).append("\n");
		sb.append("		sortedBy: ").append(toIndentedString(sortedBy)).append("\n");
		sb.append("		sortingOrder: ").append(toIndentedString(sortingOrder)).append("\n");
		sb.append("		placementGroupNoList: ").append(toIndentedString(placementGroupNoList)).append("\n");
		sb.append("		responseFormatType: ").append(toIndentedString(responseFormatType)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

