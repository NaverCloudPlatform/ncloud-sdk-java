/*
 * vserver
 * VPC Compute 관련 API<br/>https://ncloud.apigw.ntruss.com/vserver/v2
 *
 * NBP corp.
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.vserver.model;

import java.util.Objects;

/**
 * EnableFlowLogRequest
 */
public class EnableFlowLogRequest {
	private String regionCode = null;

	private String collectActionTypeCode = null;

	private Integer collectIntervalMinute = null;

	private String networkInterfaceNo = null;

	private String storageTypeCode = null;

	private String storageBucketName = null;

	private String storageBucketDirectoryName = null;

	private String responseFormatType = null;

	public EnableFlowLogRequest regionCode(String regionCode) {
		this.regionCode = regionCode;
		return this;
	}

	 /**
	 * REGION코드
	 * @return regionCode
	**/
	public String getRegionCode() {
		return regionCode;
	}

	public void setRegionCode(String regionCode) {
		this.regionCode = regionCode;
	}

	public EnableFlowLogRequest collectActionTypeCode(String collectActionTypeCode) {
		this.collectActionTypeCode = collectActionTypeCode;
		return this;
	}

	 /**
	 * 수집액션유형코드
	 * @return collectActionTypeCode
	**/
	public String getCollectActionTypeCode() {
		return collectActionTypeCode;
	}

	public void setCollectActionTypeCode(String collectActionTypeCode) {
		this.collectActionTypeCode = collectActionTypeCode;
	}

	public EnableFlowLogRequest collectIntervalMinute(Integer collectIntervalMinute) {
		this.collectIntervalMinute = collectIntervalMinute;
		return this;
	}

	 /**
	 * 수집주기(분)
	 * minimum: 5
	 * maximum: 15
	 * @return collectIntervalMinute
	**/
	public Integer getCollectIntervalMinute() {
		return collectIntervalMinute;
	}

	public void setCollectIntervalMinute(Integer collectIntervalMinute) {
		this.collectIntervalMinute = collectIntervalMinute;
	}

	public EnableFlowLogRequest networkInterfaceNo(String networkInterfaceNo) {
		this.networkInterfaceNo = networkInterfaceNo;
		return this;
	}

	 /**
	 * 네트워크인터페이스번호
	 * @return networkInterfaceNo
	**/
	public String getNetworkInterfaceNo() {
		return networkInterfaceNo;
	}

	public void setNetworkInterfaceNo(String networkInterfaceNo) {
		this.networkInterfaceNo = networkInterfaceNo;
	}

	public EnableFlowLogRequest storageTypeCode(String storageTypeCode) {
		this.storageTypeCode = storageTypeCode;
		return this;
	}

	 /**
	 * 저장소유형코드
	 * @return storageTypeCode
	**/
	public String getStorageTypeCode() {
		return storageTypeCode;
	}

	public void setStorageTypeCode(String storageTypeCode) {
		this.storageTypeCode = storageTypeCode;
	}

	public EnableFlowLogRequest storageBucketName(String storageBucketName) {
		this.storageBucketName = storageBucketName;
		return this;
	}

	 /**
	 * 저장소버킷이름
	 * @return storageBucketName
	**/
	public String getStorageBucketName() {
		return storageBucketName;
	}

	public void setStorageBucketName(String storageBucketName) {
		this.storageBucketName = storageBucketName;
	}

	public EnableFlowLogRequest storageBucketDirectoryName(String storageBucketDirectoryName) {
		this.storageBucketDirectoryName = storageBucketDirectoryName;
		return this;
	}

	 /**
	 * 저장소버킷디렉토리이름
	 * @return storageBucketDirectoryName
	**/
	public String getStorageBucketDirectoryName() {
		return storageBucketDirectoryName;
	}

	public void setStorageBucketDirectoryName(String storageBucketDirectoryName) {
		this.storageBucketDirectoryName = storageBucketDirectoryName;
	}

	public EnableFlowLogRequest responseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
		return this;
	}

	 /**
	 * responseFormatType {json, xml}
	 * @return responseFormatType
	**/
	public String getResponseFormatType() {
		return responseFormatType;
	}

	public void setResponseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		EnableFlowLogRequest enableFlowLogRequest = (EnableFlowLogRequest) o;
		return Objects.equals(this.regionCode, enableFlowLogRequest.regionCode) &&
				Objects.equals(this.collectActionTypeCode, enableFlowLogRequest.collectActionTypeCode) &&
				Objects.equals(this.collectIntervalMinute, enableFlowLogRequest.collectIntervalMinute) &&
				Objects.equals(this.networkInterfaceNo, enableFlowLogRequest.networkInterfaceNo) &&
				Objects.equals(this.storageTypeCode, enableFlowLogRequest.storageTypeCode) &&
				Objects.equals(this.storageBucketName, enableFlowLogRequest.storageBucketName) &&
				Objects.equals(this.storageBucketDirectoryName, enableFlowLogRequest.storageBucketDirectoryName) &&
				Objects.equals(this.responseFormatType, enableFlowLogRequest.responseFormatType);
	}

	@Override
	public int hashCode() {
		return Objects.hash(regionCode, collectActionTypeCode, collectIntervalMinute, networkInterfaceNo, storageTypeCode, storageBucketName, storageBucketDirectoryName, responseFormatType);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class EnableFlowLogRequest {\n");
		
		sb.append("		regionCode: ").append(toIndentedString(regionCode)).append("\n");
		sb.append("		collectActionTypeCode: ").append(toIndentedString(collectActionTypeCode)).append("\n");
		sb.append("		collectIntervalMinute: ").append(toIndentedString(collectIntervalMinute)).append("\n");
		sb.append("		networkInterfaceNo: ").append(toIndentedString(networkInterfaceNo)).append("\n");
		sb.append("		storageTypeCode: ").append(toIndentedString(storageTypeCode)).append("\n");
		sb.append("		storageBucketName: ").append(toIndentedString(storageBucketName)).append("\n");
		sb.append("		storageBucketDirectoryName: ").append(toIndentedString(storageBucketDirectoryName)).append("\n");
		sb.append("		responseFormatType: ").append(toIndentedString(responseFormatType)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

