/*
 * vserver
 * VPC Compute 관련 API<br/>https://ncloud.apigw.ntruss.com/vserver/v2
 *
 * NBP corp.
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.vserver.model;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;

/**
 * GetServerImageListRequest
 */
public class GetServerImageListRequest {
	private String regionCode = null;

	private String serverImageName = null;

	private String serverImageStatusCode = null;

	private List<String> serverImageNoList = null;

	private List<String> hypervisorCodeList = null;

	private List<String> serverImageTypeCodeList = null;

	private List<String> osTypeCodeList = null;

	private Integer pageNo = null;

	private Integer pageSize = null;

	private String sortedBy = null;

	private String sortingOrder = null;

	private String responseFormatType = null;

	public GetServerImageListRequest regionCode(String regionCode) {
		this.regionCode = regionCode;
		return this;
	}

	 /**
	 * REGION코드
	 * @return regionCode
	**/
	public String getRegionCode() {
		return regionCode;
	}

	public void setRegionCode(String regionCode) {
		this.regionCode = regionCode;
	}

	public GetServerImageListRequest serverImageName(String serverImageName) {
		this.serverImageName = serverImageName;
		return this;
	}

	 /**
	 * 서버이미지이름
	 * @return serverImageName
	**/
	public String getServerImageName() {
		return serverImageName;
	}

	public void setServerImageName(String serverImageName) {
		this.serverImageName = serverImageName;
	}

	public GetServerImageListRequest serverImageStatusCode(String serverImageStatusCode) {
		this.serverImageStatusCode = serverImageStatusCode;
		return this;
	}

	 /**
	 * 서버이미지상태코드
	 * @return serverImageStatusCode
	**/
	public String getServerImageStatusCode() {
		return serverImageStatusCode;
	}

	public void setServerImageStatusCode(String serverImageStatusCode) {
		this.serverImageStatusCode = serverImageStatusCode;
	}

	public GetServerImageListRequest serverImageNoList(List<String> serverImageNoList) {
		this.serverImageNoList = serverImageNoList;
		return this;
	}

	public GetServerImageListRequest addServerImageNoListItem(String serverImageNoListItem) {
		if (this.serverImageNoList == null) {
			this.serverImageNoList = new ArrayList<String>();
		}
		this.serverImageNoList.add(serverImageNoListItem);
		return this;
	}

	 /**
	 * 서버이미지번호리스트
	 * @return serverImageNoList
	**/
	public List<String> getServerImageNoList() {
		return serverImageNoList;
	}

	public void setServerImageNoList(List<String> serverImageNoList) {
		this.serverImageNoList = serverImageNoList;
	}

	public GetServerImageListRequest hypervisorCodeList(List<String> hypervisorCodeList) {
		this.hypervisorCodeList = hypervisorCodeList;
		return this;
	}

	public GetServerImageListRequest addHypervisorCodeListItem(String hypervisorCodeListItem) {
		if (this.hypervisorCodeList == null) {
			this.hypervisorCodeList = new ArrayList<String>();
		}
		this.hypervisorCodeList.add(hypervisorCodeListItem);
		return this;
	}

	 /**
	 * 하이퍼바이저유형코드리스트
	 * @return hypervisorCodeList
	**/
	public List<String> getHypervisorCodeList() {
		return hypervisorCodeList;
	}

	public void setHypervisorCodeList(List<String> hypervisorCodeList) {
		this.hypervisorCodeList = hypervisorCodeList;
	}

	public GetServerImageListRequest serverImageTypeCodeList(List<String> serverImageTypeCodeList) {
		this.serverImageTypeCodeList = serverImageTypeCodeList;
		return this;
	}

	public GetServerImageListRequest addServerImageTypeCodeListItem(String serverImageTypeCodeListItem) {
		if (this.serverImageTypeCodeList == null) {
			this.serverImageTypeCodeList = new ArrayList<String>();
		}
		this.serverImageTypeCodeList.add(serverImageTypeCodeListItem);
		return this;
	}

	 /**
	 * 서버이미지유형코드리스트
	 * @return serverImageTypeCodeList
	**/
	public List<String> getServerImageTypeCodeList() {
		return serverImageTypeCodeList;
	}

	public void setServerImageTypeCodeList(List<String> serverImageTypeCodeList) {
		this.serverImageTypeCodeList = serverImageTypeCodeList;
	}

	public GetServerImageListRequest osTypeCodeList(List<String> osTypeCodeList) {
		this.osTypeCodeList = osTypeCodeList;
		return this;
	}

	public GetServerImageListRequest addOsTypeCodeListItem(String osTypeCodeListItem) {
		if (this.osTypeCodeList == null) {
			this.osTypeCodeList = new ArrayList<String>();
		}
		this.osTypeCodeList.add(osTypeCodeListItem);
		return this;
	}

	 /**
	 * OS유형코드리스트
	 * @return osTypeCodeList
	**/
	public List<String> getOsTypeCodeList() {
		return osTypeCodeList;
	}

	public void setOsTypeCodeList(List<String> osTypeCodeList) {
		this.osTypeCodeList = osTypeCodeList;
	}

	public GetServerImageListRequest pageNo(Integer pageNo) {
		this.pageNo = pageNo;
		return this;
	}

	 /**
	 * 페이지번호
	 * @return pageNo
	**/
	public Integer getPageNo() {
		return pageNo;
	}

	public void setPageNo(Integer pageNo) {
		this.pageNo = pageNo;
	}

	public GetServerImageListRequest pageSize(Integer pageSize) {
		this.pageSize = pageSize;
		return this;
	}

	 /**
	 * 페이지사이즈
	 * @return pageSize
	**/
	public Integer getPageSize() {
		return pageSize;
	}

	public void setPageSize(Integer pageSize) {
		this.pageSize = pageSize;
	}

	public GetServerImageListRequest sortedBy(String sortedBy) {
		this.sortedBy = sortedBy;
		return this;
	}

	 /**
	 * 정렬대상
	 * @return sortedBy
	**/
	public String getSortedBy() {
		return sortedBy;
	}

	public void setSortedBy(String sortedBy) {
		this.sortedBy = sortedBy;
	}

	public GetServerImageListRequest sortingOrder(String sortingOrder) {
		this.sortingOrder = sortingOrder;
		return this;
	}

	 /**
	 * 정렬순서
	 * @return sortingOrder
	**/
	public String getSortingOrder() {
		return sortingOrder;
	}

	public void setSortingOrder(String sortingOrder) {
		this.sortingOrder = sortingOrder;
	}

	public GetServerImageListRequest responseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
		return this;
	}

	 /**
	 * responseFormatType {json, xml}
	 * @return responseFormatType
	**/
	public String getResponseFormatType() {
		return responseFormatType;
	}

	public void setResponseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		GetServerImageListRequest getServerImageListRequest = (GetServerImageListRequest) o;
		return Objects.equals(this.regionCode, getServerImageListRequest.regionCode) &&
				Objects.equals(this.serverImageName, getServerImageListRequest.serverImageName) &&
				Objects.equals(this.serverImageStatusCode, getServerImageListRequest.serverImageStatusCode) &&
				Objects.equals(this.serverImageNoList, getServerImageListRequest.serverImageNoList) &&
				Objects.equals(this.hypervisorCodeList, getServerImageListRequest.hypervisorCodeList) &&
				Objects.equals(this.serverImageTypeCodeList, getServerImageListRequest.serverImageTypeCodeList) &&
				Objects.equals(this.osTypeCodeList, getServerImageListRequest.osTypeCodeList) &&
				Objects.equals(this.pageNo, getServerImageListRequest.pageNo) &&
				Objects.equals(this.pageSize, getServerImageListRequest.pageSize) &&
				Objects.equals(this.sortedBy, getServerImageListRequest.sortedBy) &&
				Objects.equals(this.sortingOrder, getServerImageListRequest.sortingOrder) &&
				Objects.equals(this.responseFormatType, getServerImageListRequest.responseFormatType);
	}

	@Override
	public int hashCode() {
		return Objects.hash(regionCode, serverImageName, serverImageStatusCode, serverImageNoList, hypervisorCodeList, serverImageTypeCodeList, osTypeCodeList, pageNo, pageSize, sortedBy, sortingOrder, responseFormatType);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class GetServerImageListRequest {\n");
		
		sb.append("		regionCode: ").append(toIndentedString(regionCode)).append("\n");
		sb.append("		serverImageName: ").append(toIndentedString(serverImageName)).append("\n");
		sb.append("		serverImageStatusCode: ").append(toIndentedString(serverImageStatusCode)).append("\n");
		sb.append("		serverImageNoList: ").append(toIndentedString(serverImageNoList)).append("\n");
		sb.append("		hypervisorCodeList: ").append(toIndentedString(hypervisorCodeList)).append("\n");
		sb.append("		serverImageTypeCodeList: ").append(toIndentedString(serverImageTypeCodeList)).append("\n");
		sb.append("		osTypeCodeList: ").append(toIndentedString(osTypeCodeList)).append("\n");
		sb.append("		pageNo: ").append(toIndentedString(pageNo)).append("\n");
		sb.append("		pageSize: ").append(toIndentedString(pageSize)).append("\n");
		sb.append("		sortedBy: ").append(toIndentedString(sortedBy)).append("\n");
		sb.append("		sortingOrder: ").append(toIndentedString(sortingOrder)).append("\n");
		sb.append("		responseFormatType: ").append(toIndentedString(responseFormatType)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

