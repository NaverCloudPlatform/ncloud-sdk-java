/*
 * vserver
 * VPC Compute 관련 API<br/>https://ncloud.apigw.ntruss.com/vserver/v2
 *
 * OpenAPI spec version: 2020-11-18T09:44:20Z
 *
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.vserver.model;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;

/**
 * GetMemberServerImageInstanceListRequest
 */
public class GetMemberServerImageInstanceListRequest {
	private String regionCode = null;

	private String memberServerImageName = null;

	private String memberServerImageInstanceStatusCode = null;

	private List<String> memberServerImageInstanceNoList = null;

	private List<String> platformTypeCodeList = null;

	private Integer pageNo = null;

	private Integer pageSize = null;

	private String sortedBy = null;

	private String sortingOrder = null;

	private String responseFormatType = null;

	public GetMemberServerImageInstanceListRequest regionCode(String regionCode) {
		this.regionCode = regionCode;
		return this;
	}

	 /**
	 * REGION코드
	 * @return regionCode
	**/
	public String getRegionCode() {
		return regionCode;
	}

	public void setRegionCode(String regionCode) {
		this.regionCode = regionCode;
	}

	public GetMemberServerImageInstanceListRequest memberServerImageName(String memberServerImageName) {
		this.memberServerImageName = memberServerImageName;
		return this;
	}

	 /**
	 * 회원서버이미지이름
	 * @return memberServerImageName
	**/
	public String getMemberServerImageName() {
		return memberServerImageName;
	}

	public void setMemberServerImageName(String memberServerImageName) {
		this.memberServerImageName = memberServerImageName;
	}

	public GetMemberServerImageInstanceListRequest memberServerImageInstanceStatusCode(String memberServerImageInstanceStatusCode) {
		this.memberServerImageInstanceStatusCode = memberServerImageInstanceStatusCode;
		return this;
	}

	 /**
	 * 회원서버이미지인스턴스상태코드
	 * @return memberServerImageInstanceStatusCode
	**/
	public String getMemberServerImageInstanceStatusCode() {
		return memberServerImageInstanceStatusCode;
	}

	public void setMemberServerImageInstanceStatusCode(String memberServerImageInstanceStatusCode) {
		this.memberServerImageInstanceStatusCode = memberServerImageInstanceStatusCode;
	}

	public GetMemberServerImageInstanceListRequest memberServerImageInstanceNoList(List<String> memberServerImageInstanceNoList) {
		this.memberServerImageInstanceNoList = memberServerImageInstanceNoList;
		return this;
	}

	public GetMemberServerImageInstanceListRequest addMemberServerImageInstanceNoListItem(String memberServerImageInstanceNoListItem) {
		if (this.memberServerImageInstanceNoList == null) {
			this.memberServerImageInstanceNoList = new ArrayList<String>();
		}
		this.memberServerImageInstanceNoList.add(memberServerImageInstanceNoListItem);
		return this;
	}

	 /**
	 * 회원서버이미지인스턴스번호리스트
	 * @return memberServerImageInstanceNoList
	**/
	public List<String> getMemberServerImageInstanceNoList() {
		return memberServerImageInstanceNoList;
	}

	public void setMemberServerImageInstanceNoList(List<String> memberServerImageInstanceNoList) {
		this.memberServerImageInstanceNoList = memberServerImageInstanceNoList;
	}

	public GetMemberServerImageInstanceListRequest platformTypeCodeList(List<String> platformTypeCodeList) {
		this.platformTypeCodeList = platformTypeCodeList;
		return this;
	}

	public GetMemberServerImageInstanceListRequest addPlatformTypeCodeListItem(String platformTypeCodeListItem) {
		if (this.platformTypeCodeList == null) {
			this.platformTypeCodeList = new ArrayList<String>();
		}
		this.platformTypeCodeList.add(platformTypeCodeListItem);
		return this;
	}

	 /**
	 * 플랫폼유형코드리스트
	 * @return platformTypeCodeList
	**/
	public List<String> getPlatformTypeCodeList() {
		return platformTypeCodeList;
	}

	public void setPlatformTypeCodeList(List<String> platformTypeCodeList) {
		this.platformTypeCodeList = platformTypeCodeList;
	}

	public GetMemberServerImageInstanceListRequest pageNo(Integer pageNo) {
		this.pageNo = pageNo;
		return this;
	}

	 /**
	 * 페이지번호
	 * @return pageNo
	**/
	public Integer getPageNo() {
		return pageNo;
	}

	public void setPageNo(Integer pageNo) {
		this.pageNo = pageNo;
	}

	public GetMemberServerImageInstanceListRequest pageSize(Integer pageSize) {
		this.pageSize = pageSize;
		return this;
	}

	 /**
	 * 페이지사이즈
	 * @return pageSize
	**/
	public Integer getPageSize() {
		return pageSize;
	}

	public void setPageSize(Integer pageSize) {
		this.pageSize = pageSize;
	}

	public GetMemberServerImageInstanceListRequest sortedBy(String sortedBy) {
		this.sortedBy = sortedBy;
		return this;
	}

	 /**
	 * 정렬대상
	 * @return sortedBy
	**/
	public String getSortedBy() {
		return sortedBy;
	}

	public void setSortedBy(String sortedBy) {
		this.sortedBy = sortedBy;
	}

	public GetMemberServerImageInstanceListRequest sortingOrder(String sortingOrder) {
		this.sortingOrder = sortingOrder;
		return this;
	}

	 /**
	 * 정렬순서
	 * @return sortingOrder
	**/
	public String getSortingOrder() {
		return sortingOrder;
	}

	public void setSortingOrder(String sortingOrder) {
		this.sortingOrder = sortingOrder;
	}

	public GetMemberServerImageInstanceListRequest responseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
		return this;
	}

	 /**
	 * responseFormatType {json, xml}
	 * @return responseFormatType
	**/
	public String getResponseFormatType() {
		return responseFormatType;
	}

	public void setResponseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		GetMemberServerImageInstanceListRequest getMemberServerImageInstanceListRequest = (GetMemberServerImageInstanceListRequest) o;
		return Objects.equals(this.regionCode, getMemberServerImageInstanceListRequest.regionCode) &&
				Objects.equals(this.memberServerImageName, getMemberServerImageInstanceListRequest.memberServerImageName) &&
				Objects.equals(this.memberServerImageInstanceStatusCode, getMemberServerImageInstanceListRequest.memberServerImageInstanceStatusCode) &&
				Objects.equals(this.memberServerImageInstanceNoList, getMemberServerImageInstanceListRequest.memberServerImageInstanceNoList) &&
				Objects.equals(this.platformTypeCodeList, getMemberServerImageInstanceListRequest.platformTypeCodeList) &&
				Objects.equals(this.pageNo, getMemberServerImageInstanceListRequest.pageNo) &&
				Objects.equals(this.pageSize, getMemberServerImageInstanceListRequest.pageSize) &&
				Objects.equals(this.sortedBy, getMemberServerImageInstanceListRequest.sortedBy) &&
				Objects.equals(this.sortingOrder, getMemberServerImageInstanceListRequest.sortingOrder) &&
				Objects.equals(this.responseFormatType, getMemberServerImageInstanceListRequest.responseFormatType);
	}

	@Override
	public int hashCode() {
		return Objects.hash(regionCode, memberServerImageName, memberServerImageInstanceStatusCode, memberServerImageInstanceNoList, platformTypeCodeList, pageNo, pageSize, sortedBy, sortingOrder, responseFormatType);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class GetMemberServerImageInstanceListRequest {\n");
		
		sb.append("		regionCode: ").append(toIndentedString(regionCode)).append("\n");
		sb.append("		memberServerImageName: ").append(toIndentedString(memberServerImageName)).append("\n");
		sb.append("		memberServerImageInstanceStatusCode: ").append(toIndentedString(memberServerImageInstanceStatusCode)).append("\n");
		sb.append("		memberServerImageInstanceNoList: ").append(toIndentedString(memberServerImageInstanceNoList)).append("\n");
		sb.append("		platformTypeCodeList: ").append(toIndentedString(platformTypeCodeList)).append("\n");
		sb.append("		pageNo: ").append(toIndentedString(pageNo)).append("\n");
		sb.append("		pageSize: ").append(toIndentedString(pageSize)).append("\n");
		sb.append("		sortedBy: ").append(toIndentedString(sortedBy)).append("\n");
		sb.append("		sortingOrder: ").append(toIndentedString(sortingOrder)).append("\n");
		sb.append("		responseFormatType: ").append(toIndentedString(responseFormatType)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

