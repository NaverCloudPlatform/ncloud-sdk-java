/*
 * vserver
 * VPC Compute 관련 API<br/>https://ncloud.apigw.ntruss.com/vserver/v2
 *
 * NBP corp.
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.vserver.model;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;

/**
 * GetBlockStorageVolumeTypeListRequest
 */
public class GetBlockStorageVolumeTypeListRequest {
	private String regionCode = null;

	private String zoneCode = null;

	private Boolean isAvailableBase = null;

	private String serverSpecCode = null;

	private List<String> blockStorageVolumeTypeCodeList = null;

	private List<String> hypervisorTypeCodeList = null;

	private String responseFormatType = null;

	public GetBlockStorageVolumeTypeListRequest regionCode(String regionCode) {
		this.regionCode = regionCode;
		return this;
	}

	 /**
	 * REGION코드
	 * @return regionCode
	**/
	public String getRegionCode() {
		return regionCode;
	}

	public void setRegionCode(String regionCode) {
		this.regionCode = regionCode;
	}

	public GetBlockStorageVolumeTypeListRequest zoneCode(String zoneCode) {
		this.zoneCode = zoneCode;
		return this;
	}

	 /**
	 * 존코드
	 * @return zoneCode
	**/
	public String getZoneCode() {
		return zoneCode;
	}

	public void setZoneCode(String zoneCode) {
		this.zoneCode = zoneCode;
	}

	public GetBlockStorageVolumeTypeListRequest isAvailableBase(Boolean isAvailableBase) {
		this.isAvailableBase = isAvailableBase;
		return this;
	}

	 /**
	 * 기본스토리지 가능 여부
	 * @return isAvailableBase
	**/
	public Boolean isIsAvailableBase() {
		return isAvailableBase;
	}

	public void setIsAvailableBase(Boolean isAvailableBase) {
		this.isAvailableBase = isAvailableBase;
	}

	public GetBlockStorageVolumeTypeListRequest serverSpecCode(String serverSpecCode) {
		this.serverSpecCode = serverSpecCode;
		return this;
	}

	 /**
	 * 서버스펙코드
	 * @return serverSpecCode
	**/
	public String getServerSpecCode() {
		return serverSpecCode;
	}

	public void setServerSpecCode(String serverSpecCode) {
		this.serverSpecCode = serverSpecCode;
	}

	public GetBlockStorageVolumeTypeListRequest blockStorageVolumeTypeCodeList(List<String> blockStorageVolumeTypeCodeList) {
		this.blockStorageVolumeTypeCodeList = blockStorageVolumeTypeCodeList;
		return this;
	}

	public GetBlockStorageVolumeTypeListRequest addBlockStorageVolumeTypeCodeListItem(String blockStorageVolumeTypeCodeListItem) {
		if (this.blockStorageVolumeTypeCodeList == null) {
			this.blockStorageVolumeTypeCodeList = new ArrayList<String>();
		}
		this.blockStorageVolumeTypeCodeList.add(blockStorageVolumeTypeCodeListItem);
		return this;
	}

	 /**
	 * 블록스토리지볼륨타입코드리스트
	 * @return blockStorageVolumeTypeCodeList
	**/
	public List<String> getBlockStorageVolumeTypeCodeList() {
		return blockStorageVolumeTypeCodeList;
	}

	public void setBlockStorageVolumeTypeCodeList(List<String> blockStorageVolumeTypeCodeList) {
		this.blockStorageVolumeTypeCodeList = blockStorageVolumeTypeCodeList;
	}

	public GetBlockStorageVolumeTypeListRequest hypervisorTypeCodeList(List<String> hypervisorTypeCodeList) {
		this.hypervisorTypeCodeList = hypervisorTypeCodeList;
		return this;
	}

	public GetBlockStorageVolumeTypeListRequest addHypervisorTypeCodeListItem(String hypervisorTypeCodeListItem) {
		if (this.hypervisorTypeCodeList == null) {
			this.hypervisorTypeCodeList = new ArrayList<String>();
		}
		this.hypervisorTypeCodeList.add(hypervisorTypeCodeListItem);
		return this;
	}

	 /**
	 * 하이퍼바이저타입코드리스트
	 * @return hypervisorTypeCodeList
	**/
	public List<String> getHypervisorTypeCodeList() {
		return hypervisorTypeCodeList;
	}

	public void setHypervisorTypeCodeList(List<String> hypervisorTypeCodeList) {
		this.hypervisorTypeCodeList = hypervisorTypeCodeList;
	}

	public GetBlockStorageVolumeTypeListRequest responseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
		return this;
	}

	 /**
	 * responseFormatType {json, xml}
	 * @return responseFormatType
	**/
	public String getResponseFormatType() {
		return responseFormatType;
	}

	public void setResponseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		GetBlockStorageVolumeTypeListRequest getBlockStorageVolumeTypeListRequest = (GetBlockStorageVolumeTypeListRequest) o;
		return Objects.equals(this.regionCode, getBlockStorageVolumeTypeListRequest.regionCode) &&
				Objects.equals(this.zoneCode, getBlockStorageVolumeTypeListRequest.zoneCode) &&
				Objects.equals(this.isAvailableBase, getBlockStorageVolumeTypeListRequest.isAvailableBase) &&
				Objects.equals(this.serverSpecCode, getBlockStorageVolumeTypeListRequest.serverSpecCode) &&
				Objects.equals(this.blockStorageVolumeTypeCodeList, getBlockStorageVolumeTypeListRequest.blockStorageVolumeTypeCodeList) &&
				Objects.equals(this.hypervisorTypeCodeList, getBlockStorageVolumeTypeListRequest.hypervisorTypeCodeList) &&
				Objects.equals(this.responseFormatType, getBlockStorageVolumeTypeListRequest.responseFormatType);
	}

	@Override
	public int hashCode() {
		return Objects.hash(regionCode, zoneCode, isAvailableBase, serverSpecCode, blockStorageVolumeTypeCodeList, hypervisorTypeCodeList, responseFormatType);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class GetBlockStorageVolumeTypeListRequest {\n");
		
		sb.append("		regionCode: ").append(toIndentedString(regionCode)).append("\n");
		sb.append("		zoneCode: ").append(toIndentedString(zoneCode)).append("\n");
		sb.append("		isAvailableBase: ").append(toIndentedString(isAvailableBase)).append("\n");
		sb.append("		serverSpecCode: ").append(toIndentedString(serverSpecCode)).append("\n");
		sb.append("		blockStorageVolumeTypeCodeList: ").append(toIndentedString(blockStorageVolumeTypeCodeList)).append("\n");
		sb.append("		hypervisorTypeCodeList: ").append(toIndentedString(hypervisorTypeCodeList)).append("\n");
		sb.append("		responseFormatType: ").append(toIndentedString(responseFormatType)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

