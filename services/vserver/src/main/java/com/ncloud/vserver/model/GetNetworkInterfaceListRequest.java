/*
 * vserver
 * VPC Compute 관련 API<br/>https://ncloud.apigw.ntruss.com/vserver/v2
 *
 * NBP corp.
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.vserver.model;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;

/**
 * GetNetworkInterfaceListRequest
 */
public class GetNetworkInterfaceListRequest {
	private String regionCode = null;

	private List<String> networkInterfaceNoList = null;

	private String ip = null;

	private String networkInterfaceName = null;

	private String serverName = null;

	private String subnetName = null;

	private Integer pageNo = null;

	private Integer pageSize = null;

	private String responseFormatType = null;

	public GetNetworkInterfaceListRequest regionCode(String regionCode) {
		this.regionCode = regionCode;
		return this;
	}

	 /**
	 * REGION코드
	 * @return regionCode
	**/
	public String getRegionCode() {
		return regionCode;
	}

	public void setRegionCode(String regionCode) {
		this.regionCode = regionCode;
	}

	public GetNetworkInterfaceListRequest networkInterfaceNoList(List<String> networkInterfaceNoList) {
		this.networkInterfaceNoList = networkInterfaceNoList;
		return this;
	}

	public GetNetworkInterfaceListRequest addNetworkInterfaceNoListItem(String networkInterfaceNoListItem) {
		if (this.networkInterfaceNoList == null) {
			this.networkInterfaceNoList = new ArrayList<String>();
		}
		this.networkInterfaceNoList.add(networkInterfaceNoListItem);
		return this;
	}

	 /**
	 * 네트워크인터페이스번호리스트
	 * @return networkInterfaceNoList
	**/
	public List<String> getNetworkInterfaceNoList() {
		return networkInterfaceNoList;
	}

	public void setNetworkInterfaceNoList(List<String> networkInterfaceNoList) {
		this.networkInterfaceNoList = networkInterfaceNoList;
	}

	public GetNetworkInterfaceListRequest ip(String ip) {
		this.ip = ip;
		return this;
	}

	 /**
	 * IP주소
	 * @return ip
	**/
	public String getIp() {
		return ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	public GetNetworkInterfaceListRequest networkInterfaceName(String networkInterfaceName) {
		this.networkInterfaceName = networkInterfaceName;
		return this;
	}

	 /**
	 * 네트워크인터페이스이름
	 * @return networkInterfaceName
	**/
	public String getNetworkInterfaceName() {
		return networkInterfaceName;
	}

	public void setNetworkInterfaceName(String networkInterfaceName) {
		this.networkInterfaceName = networkInterfaceName;
	}

	public GetNetworkInterfaceListRequest serverName(String serverName) {
		this.serverName = serverName;
		return this;
	}

	 /**
	 * 서버이름
	 * @return serverName
	**/
	public String getServerName() {
		return serverName;
	}

	public void setServerName(String serverName) {
		this.serverName = serverName;
	}

	public GetNetworkInterfaceListRequest subnetName(String subnetName) {
		this.subnetName = subnetName;
		return this;
	}

	 /**
	 * 서브넷이름
	 * @return subnetName
	**/
	public String getSubnetName() {
		return subnetName;
	}

	public void setSubnetName(String subnetName) {
		this.subnetName = subnetName;
	}

	public GetNetworkInterfaceListRequest pageNo(Integer pageNo) {
		this.pageNo = pageNo;
		return this;
	}

	 /**
	 * 페이지번호
	 * @return pageNo
	**/
	public Integer getPageNo() {
		return pageNo;
	}

	public void setPageNo(Integer pageNo) {
		this.pageNo = pageNo;
	}

	public GetNetworkInterfaceListRequest pageSize(Integer pageSize) {
		this.pageSize = pageSize;
		return this;
	}

	 /**
	 * 페이지사이즈
	 * @return pageSize
	**/
	public Integer getPageSize() {
		return pageSize;
	}

	public void setPageSize(Integer pageSize) {
		this.pageSize = pageSize;
	}

	public GetNetworkInterfaceListRequest responseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
		return this;
	}

	 /**
	 * responseFormatType {json, xml}
	 * @return responseFormatType
	**/
	public String getResponseFormatType() {
		return responseFormatType;
	}

	public void setResponseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		GetNetworkInterfaceListRequest getNetworkInterfaceListRequest = (GetNetworkInterfaceListRequest) o;
		return Objects.equals(this.regionCode, getNetworkInterfaceListRequest.regionCode) &&
				Objects.equals(this.networkInterfaceNoList, getNetworkInterfaceListRequest.networkInterfaceNoList) &&
				Objects.equals(this.ip, getNetworkInterfaceListRequest.ip) &&
				Objects.equals(this.networkInterfaceName, getNetworkInterfaceListRequest.networkInterfaceName) &&
				Objects.equals(this.serverName, getNetworkInterfaceListRequest.serverName) &&
				Objects.equals(this.subnetName, getNetworkInterfaceListRequest.subnetName) &&
				Objects.equals(this.pageNo, getNetworkInterfaceListRequest.pageNo) &&
				Objects.equals(this.pageSize, getNetworkInterfaceListRequest.pageSize) &&
				Objects.equals(this.responseFormatType, getNetworkInterfaceListRequest.responseFormatType);
	}

	@Override
	public int hashCode() {
		return Objects.hash(regionCode, networkInterfaceNoList, ip, networkInterfaceName, serverName, subnetName, pageNo, pageSize, responseFormatType);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class GetNetworkInterfaceListRequest {\n");
		
		sb.append("		regionCode: ").append(toIndentedString(regionCode)).append("\n");
		sb.append("		networkInterfaceNoList: ").append(toIndentedString(networkInterfaceNoList)).append("\n");
		sb.append("		ip: ").append(toIndentedString(ip)).append("\n");
		sb.append("		networkInterfaceName: ").append(toIndentedString(networkInterfaceName)).append("\n");
		sb.append("		serverName: ").append(toIndentedString(serverName)).append("\n");
		sb.append("		subnetName: ").append(toIndentedString(subnetName)).append("\n");
		sb.append("		pageNo: ").append(toIndentedString(pageNo)).append("\n");
		sb.append("		pageSize: ").append(toIndentedString(pageSize)).append("\n");
		sb.append("		responseFormatType: ").append(toIndentedString(responseFormatType)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

