/*
 * loadbalancer
 * <br/>https://ncloud.apigw.ntruss.com/loadbalancer/v2
 *
 * NBP corp.
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.loadbalancer.model;

import java.util.Objects;
import com.ncloud.loadbalancer.model.CommonCode;

/**
 * ServerHealthCheckStatus
 */
public class ServerHealthCheckStatus {
	private CommonCode protocolType = null;

	private Integer loadBalancerPort = null;

	private Integer serverPort = null;

	private String l7HealthCheckPath = null;

	private String proxyProtocolUseYn = null;

	private Boolean serverStatus = null;

	public ServerHealthCheckStatus protocolType(CommonCode protocolType) {
		this.protocolType = protocolType;
		return this;
	}

	 /**
	 * Get protocolType
	 * @return protocolType
	**/
	public CommonCode getProtocolType() {
		return protocolType;
	}

	public void setProtocolType(CommonCode protocolType) {
		this.protocolType = protocolType;
	}

	public ServerHealthCheckStatus loadBalancerPort(Integer loadBalancerPort) {
		this.loadBalancerPort = loadBalancerPort;
		return this;
	}

	 /**
	 * Get loadBalancerPort
	 * @return loadBalancerPort
	**/
	public Integer getLoadBalancerPort() {
		return loadBalancerPort;
	}

	public void setLoadBalancerPort(Integer loadBalancerPort) {
		this.loadBalancerPort = loadBalancerPort;
	}

	public ServerHealthCheckStatus serverPort(Integer serverPort) {
		this.serverPort = serverPort;
		return this;
	}

	 /**
	 * 서버포트
	 * @return serverPort
	**/
	public Integer getServerPort() {
		return serverPort;
	}

	public void setServerPort(Integer serverPort) {
		this.serverPort = serverPort;
	}

	public ServerHealthCheckStatus l7HealthCheckPath(String l7HealthCheckPath) {
		this.l7HealthCheckPath = l7HealthCheckPath;
		return this;
	}

	 /**
	 * Get l7HealthCheckPath
	 * @return l7HealthCheckPath
	**/
	public String getL7HealthCheckPath() {
		return l7HealthCheckPath;
	}

	public void setL7HealthCheckPath(String l7HealthCheckPath) {
		this.l7HealthCheckPath = l7HealthCheckPath;
	}

	public ServerHealthCheckStatus proxyProtocolUseYn(String proxyProtocolUseYn) {
		this.proxyProtocolUseYn = proxyProtocolUseYn;
		return this;
	}

	 /**
	 * Get proxyProtocolUseYn
	 * @return proxyProtocolUseYn
	**/
	public String getProxyProtocolUseYn() {
		return proxyProtocolUseYn;
	}

	public void setProxyProtocolUseYn(String proxyProtocolUseYn) {
		this.proxyProtocolUseYn = proxyProtocolUseYn;
	}

	public ServerHealthCheckStatus serverStatus(Boolean serverStatus) {
		this.serverStatus = serverStatus;
		return this;
	}

	 /**
	 * 서버상태
	 * @return serverStatus
	**/
	public Boolean isServerStatus() {
		return serverStatus;
	}

	public void setServerStatus(Boolean serverStatus) {
		this.serverStatus = serverStatus;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ServerHealthCheckStatus serverHealthCheckStatus = (ServerHealthCheckStatus) o;
		return Objects.equals(this.protocolType, serverHealthCheckStatus.protocolType) &&
				Objects.equals(this.loadBalancerPort, serverHealthCheckStatus.loadBalancerPort) &&
				Objects.equals(this.serverPort, serverHealthCheckStatus.serverPort) &&
				Objects.equals(this.l7HealthCheckPath, serverHealthCheckStatus.l7HealthCheckPath) &&
				Objects.equals(this.proxyProtocolUseYn, serverHealthCheckStatus.proxyProtocolUseYn) &&
				Objects.equals(this.serverStatus, serverHealthCheckStatus.serverStatus);
	}

	@Override
	public int hashCode() {
		return Objects.hash(protocolType, loadBalancerPort, serverPort, l7HealthCheckPath, proxyProtocolUseYn, serverStatus);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ServerHealthCheckStatus {\n");
		
		sb.append("		protocolType: ").append(toIndentedString(protocolType)).append("\n");
		sb.append("		loadBalancerPort: ").append(toIndentedString(loadBalancerPort)).append("\n");
		sb.append("		serverPort: ").append(toIndentedString(serverPort)).append("\n");
		sb.append("		l7HealthCheckPath: ").append(toIndentedString(l7HealthCheckPath)).append("\n");
		sb.append("		proxyProtocolUseYn: ").append(toIndentedString(proxyProtocolUseYn)).append("\n");
		sb.append("		serverStatus: ").append(toIndentedString(serverStatus)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

