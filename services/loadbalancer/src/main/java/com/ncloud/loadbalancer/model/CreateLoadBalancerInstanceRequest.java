/*
 * loadbalancer
 * <br/>https://ncloud.apigw.ntruss.com/loadbalancer/v2
 *
 * OpenAPI spec version: 2018-11-13T06:25:36Z
 *
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ncloud.loadbalancer.model;

import java.util.Objects;
import com.ncloud.loadbalancer.model.LoadBalancerRuleParameter;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateLoadBalancerInstanceRequest
 */
public class CreateLoadBalancerInstanceRequest {
	private String loadBalancerName = null;

	private String loadBalancerAlgorithmTypeCode = null;

	private String loadBalancerDescription = null;

	private List<LoadBalancerRuleParameter> loadBalancerRuleList = new ArrayList<LoadBalancerRuleParameter>();

	private List<String> serverInstanceNoList = null;

	private String internetLineTypeCode = null;

	private String networkUsageTypeCode = null;

	private String regionNo = null;

	private String responseFormatType = null;

	public CreateLoadBalancerInstanceRequest loadBalancerName(String loadBalancerName) {
		this.loadBalancerName = loadBalancerName;
		return this;
	}

	 /**
	 * 로드밸런서명
	 * @return loadBalancerName
	**/
	public String getLoadBalancerName() {
		return loadBalancerName;
	}

	public void setLoadBalancerName(String loadBalancerName) {
		this.loadBalancerName = loadBalancerName;
	}

	public CreateLoadBalancerInstanceRequest loadBalancerAlgorithmTypeCode(String loadBalancerAlgorithmTypeCode) {
		this.loadBalancerAlgorithmTypeCode = loadBalancerAlgorithmTypeCode;
		return this;
	}

	 /**
	 * 로드밸런서알고리즘구분코드
	 * @return loadBalancerAlgorithmTypeCode
	**/
	public String getLoadBalancerAlgorithmTypeCode() {
		return loadBalancerAlgorithmTypeCode;
	}

	public void setLoadBalancerAlgorithmTypeCode(String loadBalancerAlgorithmTypeCode) {
		this.loadBalancerAlgorithmTypeCode = loadBalancerAlgorithmTypeCode;
	}

	public CreateLoadBalancerInstanceRequest loadBalancerDescription(String loadBalancerDescription) {
		this.loadBalancerDescription = loadBalancerDescription;
		return this;
	}

	 /**
	 * 로드밸런서설명
	 * @return loadBalancerDescription
	**/
	public String getLoadBalancerDescription() {
		return loadBalancerDescription;
	}

	public void setLoadBalancerDescription(String loadBalancerDescription) {
		this.loadBalancerDescription = loadBalancerDescription;
	}

	public CreateLoadBalancerInstanceRequest loadBalancerRuleList(List<LoadBalancerRuleParameter> loadBalancerRuleList) {
		this.loadBalancerRuleList = loadBalancerRuleList;
		return this;
	}

	public CreateLoadBalancerInstanceRequest addLoadBalancerRuleListItem(LoadBalancerRuleParameter loadBalancerRuleListItem) {
		this.loadBalancerRuleList.add(loadBalancerRuleListItem);
		return this;
	}

	 /**
	 * 로드밸런서RULE리스트
	 * @return loadBalancerRuleList
	**/
	public List<LoadBalancerRuleParameter> getLoadBalancerRuleList() {
		return loadBalancerRuleList;
	}

	public void setLoadBalancerRuleList(List<LoadBalancerRuleParameter> loadBalancerRuleList) {
		this.loadBalancerRuleList = loadBalancerRuleList;
	}

	public CreateLoadBalancerInstanceRequest serverInstanceNoList(List<String> serverInstanceNoList) {
		this.serverInstanceNoList = serverInstanceNoList;
		return this;
	}

	public CreateLoadBalancerInstanceRequest addServerInstanceNoListItem(String serverInstanceNoListItem) {
		if (this.serverInstanceNoList == null) {
			this.serverInstanceNoList = new ArrayList<String>();
		}
		this.serverInstanceNoList.add(serverInstanceNoListItem);
		return this;
	}

	 /**
	 * 서버인스턴스번호리스트
	 * @return serverInstanceNoList
	**/
	public List<String> getServerInstanceNoList() {
		return serverInstanceNoList;
	}

	public void setServerInstanceNoList(List<String> serverInstanceNoList) {
		this.serverInstanceNoList = serverInstanceNoList;
	}

	public CreateLoadBalancerInstanceRequest internetLineTypeCode(String internetLineTypeCode) {
		this.internetLineTypeCode = internetLineTypeCode;
		return this;
	}

	 /**
	 * 인터넷라인구분코드
	 * @return internetLineTypeCode
	**/
	public String getInternetLineTypeCode() {
		return internetLineTypeCode;
	}

	public void setInternetLineTypeCode(String internetLineTypeCode) {
		this.internetLineTypeCode = internetLineTypeCode;
	}

	public CreateLoadBalancerInstanceRequest networkUsageTypeCode(String networkUsageTypeCode) {
		this.networkUsageTypeCode = networkUsageTypeCode;
		return this;
	}

	 /**
	 * 네트워크용도구분코드
	 * @return networkUsageTypeCode
	**/
	public String getNetworkUsageTypeCode() {
		return networkUsageTypeCode;
	}

	public void setNetworkUsageTypeCode(String networkUsageTypeCode) {
		this.networkUsageTypeCode = networkUsageTypeCode;
	}

	public CreateLoadBalancerInstanceRequest regionNo(String regionNo) {
		this.regionNo = regionNo;
		return this;
	}

	 /**
	 * 리전번호
	 * @return regionNo
	**/
	public String getRegionNo() {
		return regionNo;
	}

	public void setRegionNo(String regionNo) {
		this.regionNo = regionNo;
	}

	public CreateLoadBalancerInstanceRequest responseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
		return this;
	}

	 /**
	 * responseFormatType {json, xml}
	 * @return responseFormatType
	**/
	public String getResponseFormatType() {
		return responseFormatType;
	}

	public void setResponseFormatType(String responseFormatType) {
		this.responseFormatType = responseFormatType;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		CreateLoadBalancerInstanceRequest createLoadBalancerInstanceRequest = (CreateLoadBalancerInstanceRequest) o;
		return Objects.equals(this.loadBalancerName, createLoadBalancerInstanceRequest.loadBalancerName) &&
				Objects.equals(this.loadBalancerAlgorithmTypeCode, createLoadBalancerInstanceRequest.loadBalancerAlgorithmTypeCode) &&
				Objects.equals(this.loadBalancerDescription, createLoadBalancerInstanceRequest.loadBalancerDescription) &&
				Objects.equals(this.loadBalancerRuleList, createLoadBalancerInstanceRequest.loadBalancerRuleList) &&
				Objects.equals(this.serverInstanceNoList, createLoadBalancerInstanceRequest.serverInstanceNoList) &&
				Objects.equals(this.internetLineTypeCode, createLoadBalancerInstanceRequest.internetLineTypeCode) &&
				Objects.equals(this.networkUsageTypeCode, createLoadBalancerInstanceRequest.networkUsageTypeCode) &&
				Objects.equals(this.regionNo, createLoadBalancerInstanceRequest.regionNo) &&
				Objects.equals(this.responseFormatType, createLoadBalancerInstanceRequest.responseFormatType);
	}

	@Override
	public int hashCode() {
		return Objects.hash(loadBalancerName, loadBalancerAlgorithmTypeCode, loadBalancerDescription, loadBalancerRuleList, serverInstanceNoList, internetLineTypeCode, networkUsageTypeCode, regionNo, responseFormatType);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class CreateLoadBalancerInstanceRequest {\n");
		
		sb.append("		loadBalancerName: ").append(toIndentedString(loadBalancerName)).append("\n");
		sb.append("		loadBalancerAlgorithmTypeCode: ").append(toIndentedString(loadBalancerAlgorithmTypeCode)).append("\n");
		sb.append("		loadBalancerDescription: ").append(toIndentedString(loadBalancerDescription)).append("\n");
		sb.append("		loadBalancerRuleList: ").append(toIndentedString(loadBalancerRuleList)).append("\n");
		sb.append("		serverInstanceNoList: ").append(toIndentedString(serverInstanceNoList)).append("\n");
		sb.append("		internetLineTypeCode: ").append(toIndentedString(internetLineTypeCode)).append("\n");
		sb.append("		networkUsageTypeCode: ").append(toIndentedString(networkUsageTypeCode)).append("\n");
		sb.append("		regionNo: ").append(toIndentedString(regionNo)).append("\n");
		sb.append("		responseFormatType: ").append(toIndentedString(responseFormatType)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n		");
	}

}

